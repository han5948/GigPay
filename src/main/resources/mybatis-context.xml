<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:jee="http://www.springframework.org/schema/jee"
  xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
                 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                 http://www.springframework.org/schema/context
                 http://www.springframework.org/schema/context/spring-context-3.0.xsd
                 http://www.springframework.org/schema/tx
                 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                 http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">

  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      	<value>classpath:properties/${spring.profiles.active}/jdbc.properties</value>
    </property>
  </bean>

<!--  Web Database 셋팅  -->
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="${jdbc.Driver}" />
    <property name="url" value="${jdbc.ConnectionURL}" />
    <property name="username" value="${jdbc.Username}" />
    <property name="password" value="${jdbc.Password}" />
    <property name="testOnBorrow" value="true" />
    <property name="testOnReturn" value="true" />
    <property name="testWhileIdle" value="true" />
    <property name="validationQuery" value="select 1" />
    <property name="initialSize" value="${jdbc.initialSize}" />
    <property name="maxActive" value="${jdbc.maxActive}" />
    <property name="maxIdle" value="${jdbc.maxIdle}" />
    <property name="timeBetweenEvictionRunsMillis" value="7200000" />
    <property name="poolPreparedStatements" value="true" />
    <property name="maxWait" value="${jdbc.maxWait}"></property>
  </bean>
	
	
			
  <bean id="sqlSessionFactory" name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="configLocation" value="classpath:mybatis-config.xml" />
    <property name="mapperLocations">
      <array>
        <value>classpath:sqlmaps/ilgaja/write/*.xml</value>
        <value>classpath:sqlmaps/ilgaja/write/*/*.xml</value>
		<!-- 외부 라이브러리 경로는 classpath* -->
        <value>classpath*:sqlmaps/ilgaja/*.xml</value>
      </array>
    </property>
  </bean>
  
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.nemo.kr.mapper.ilgaja.write, com.ilgajaComm.mapper" />
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
  </bean>
	
   <bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <tx:annotation-driven transaction-manager="transactionManager" />

<!--  SMS Database 셋팅  -->
  <bean id="dataSourceSms" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="${jdbc.Driver}" />
    <property name="url" value="${jdbc.sms.ConnectionURL}" />
    <property name="username" value="${jdbc.sms.Username}" />
    <property name="password" value="${jdbc.sms.Password}" />
    <property name="testOnBorrow" value="true" />
    <property name="testOnReturn" value="true" />
    <property name="testWhileIdle" value="true" />
    <property name="initialSize" value="${jdbc.sms.initialSize}" />
    <property name="maxActive" value="${jdbc.sms.maxActive}" />
    <property name="validationQuery" value="select 2" />
    <property name="timeBetweenEvictionRunsMillis" value="7200000" />
    <property name="poolPreparedStatements" value="true" />
    <property name="maxWait" value="${jdbc.sms.maxWait}"></property>
  </bean>

  <bean id="sqlSessionFactorySms"  name="sqlSessionFactorySms" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSourceSms" />
    <property name="configLocation" value="classpath:mybatis-config.xml" />
    <property name="mapperLocations">
      <array>
        <value>classpath:sqlmaps/sms/*.xml</value>
      </array>
    </property>
  </bean>

  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.nemo.kr.mapper.sms" />
    <property name="annotationClass" value="com.nemo.kr.core.MessageMapper" />
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactorySms"/>
  </bean>
	
    <bean id="transactionManager2"    
   		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSourceSms" />
  </bean>

  <tx:annotation-driven transaction-manager="transactionManager2" />
  
  <bean id="replicationDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="${jdbc.read.Driver}" />
    <property name="url" value="${jdbc.read.ConnectionURL}" />
    <property name="username" value="${jdbc.read.Username}" />
    <property name="password" value="${jdbc.read.Password}" />
    <property name="testOnBorrow" value="true" />
    <property name="testOnReturn" value="true" />
    <property name="testWhileIdle" value="true" />
    <property name="validationQuery" value="select 1" />
    <property name="initialSize" value="${jdbc.read.initialSize}" />
    <property name="maxActive" value="${jdbc.read.maxActive}" />
    <property name="maxIdle" value="${jdbc.read.maxIdle}" />
    <property name="timeBetweenEvictionRunsMillis" value="7200000" />
    <property name="poolPreparedStatements" value="true" />
    <property name="maxWait" value="${jdbc.read.maxWait}"></property>
  </bean>
	
	
			
  <bean id="replicationSqlSessionFactory" name="replicationSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="replicationDataSource" />
    <property name="configLocation" value="classpath:mybatis-config.xml" />
    <property name="mapperLocations">
      <array>
        <value>classpath:sqlmaps/ilgaja/read/*.xml</value>
      </array>
    </property>
  </bean>
  
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.nemo.kr.mapper.ilgaja.read" />
    <property name="sqlSessionFactoryBeanName" value="replicationSqlSessionFactory"/>
  </bean>
	
   <bean id="replicationTransactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="replicationDataSource" />
  </bean>

  <tx:annotation-driven transaction-manager="replicationTransactionManager" />
  
</beans>