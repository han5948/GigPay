<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.nemo.kr.mapper.ilgaja.write.CommonMapper">

	<select id="getCommonCodeList" parameterType="CodeDTO" resultType="CodeDTO">
    	/* 코드 조회 ilgaja_common.getCommonCodeList */
    	SELECT 
    		*
    	FROM 
    		code
    	WHERE 
    		1 = 1
<!--
    <if test="code_type     neq '' and code_type     neq null"> AND code_type  = #{code_type}  </if>
-->
    		<if test="code_type     neq '' and code_type     neq null"> AND code_type IN (${code_type})  </if>
    		<if test="code_value    neq '' and code_value    neq null"> AND code_value = #{code_value} </if>
    		<if test="code_name     neq '' and code_name     neq null"> AND code_name  = #{code_name}  </if>
    		<if test="use_yn        neq '' and use_yn         neq null"> AND use_yn     = #{use_yn}     </if>
    		<if test="del_yn        neq '' and del_yn			neq null"> AND del_yn			= #{del_yn}     </if>
    		<if test="sel_code_type neq '' and sel_code_type neq null"> AND code_type IN (#{sel_code_type}) </if>
<!--
    <if test="sel_code_type neq '' and sel_code_type neq null"> AND code_type IN (
      <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
        #{sel_code_type}
      </foreach>
    </if>
-->
    	ORDER BY 
    		code_type
    		, code_gender
    		, code_rank
    		, code_value
	</select>

  	<select id="getCompanyNameList" parameterType="CommonDTO" resultType="CommonDTO">
    	/* 회사명 조회 ilgaja_common.getCompanyNameList */
<!--
    SELECT company_seq as code, company_name as text, CONCAT(company_name, ' (', company_num, ')') AS label
-->
    	SELECT 
    		company_seq AS code
    		, company_name AS text
    		, company_name AS label
    	FROM 
    		company
    	WHERE 
    		1 = 1
    		<if test="srh_company_seq neq '' and srh_company_seq neq null"> AND company_seq  = #{srh_company_seq} </if>
    		<if test="company_seq     neq '' and company_seq     neq null"> AND company_seq   = #{company_seq} </if>
    		<if test="srh_use_yn      neq '' and srh_use_yn      neq null"> AND use_yn       = #{srh_use_yn}      </if>
    		<if test="term            neq '' and term            neq null"> AND company_name LIKE '%${term}%' </if>
    	ORDER BY 
    		company_name
  	</select>

  	<select id="getEmployerNameList" parameterType="CommonDTO" resultType="CommonDTO">
    	/* 구인처명 조회 ilgaja_common.getEmployerNameList */
<!--
    SELECT employer_seq as code, employer_name as text, CONCAT(employer_name, ' (', employer_num, ')') AS label
-->
    	SELECT 
    		employer_seq AS code
    		, employer_name AS text
    		, CONCAT(
		     	e.employer_name
		    	, " | "
		    	, IFNULL(e.employer_num,'')
		    	, " | "
		    	, c.company_name
		  	) AS label
		  	, e.employer_num 
    	FROM 
    		employer e
	    	LEFT OUTER JOIN company c 
	    		ON e.company_seq = c.company_seq
	    WHERE 
	    	1 = 1
	    	<if test="company_seq     neq '' and company_seq     neq null"> AND e.company_seq   = #{company_seq} </if>
	    	<if test="srh_use_yn      neq '' and srh_use_yn      neq null"> AND e.use_yn        = #{srh_use_yn}      </if>
	    	<if test="term            neq '' and term            neq null"> AND employer_name LIKE '%${term}%' </if>
	    	<if test="owner_id           neq '' and owner_id           neq null"> AND e.owner_id			= #{owner_id} </if>
	    ORDER BY 
	    	employer_name
  	</select>
	
  	<select id="chkEmployerName" parameterType="CommonDTO" resultType="int">
    	/* 구인처명 확인 ilgaja_common.chkEmployerName */
<!--
    SELECT employer_seq as code, employer_name as text, CONCAT(employer_name, ' (', employer_num, ')') AS label
-->
    	SELECT 
    		COUNT(employer_seq) AS CNT
    	FROM 
    		employer
    	WHERE 
    		1 = 1
    		<if test="company_seq     neq '' and company_seq     neq null"> AND company_seq   = #{company_seq} </if>
    		<if test="srh_use_yn      neq '' and srh_use_yn      neq null"> AND use_yn        = #{srh_use_yn}      </if>
    		<if test="term            neq '' and term            neq null"> AND employer_name = #{term}            </if>
    		<if test="owner_id           neq '' and owner_id           neq null"> AND owner_id			= #{owner_id} </if>
  	</select>

  	<select id="getWorkerNameList" parameterType="WorkerDTO" resultType="WorkerDTO">
    	/* 구직자 조회 ilgaja_common.getWorkerNameList */
     	SELECT 
			w.worker_seq AS CODE
			, fn_decrypt(w.worker_name) AS TEXT
		  	,  CONCAT(fn_decrypt(w.worker_name)," " ,IFNULL(SUBSTR(fn_decrypt(w.worker_jumin), 1, 6), ""))  AS label
		  	, fn_decrypt(w.worker_name) as worker_name
		  	, fn_decrypt(w.worker_phone) as worker_phone 
		  	, fn_decrypt(w.worker_jumin) as worker_jumin
		  	, fn_decrypt(w.worker_bank_account) as worker_bank_account
		  	, fn_decrypt(w.worker_bank_owner) as worker_bank_owner
		  	, w.worker_seq,  w.company_seq, w.worker_rating  
		  	, worker_sex,   worker_addr,  worker_latlng,  worker_ilgaja_addr,  worker_ilgaja_latlng,  worker_pass,  login_key,  worker_job_code,  worker_job_name,  worker_tel1,  worker_tel2,  worker_tel3,  worker_barcode
		  	, worker_memo,  worker_bank_code,  worker_bank_name, worker_feature,  worker_blood_pressure,  worker_OSH_yn,  worker_jumin_scan_yn,  worker_bankbook_scan_yn,  worker_job_scan_yn,  worker_OSH_scan_yn,  worker_certificate_scan_yn
		  	, worker_app_status,  worker_reserve_push_status,  worker_app_use_status,  worker_push_yn,  sms_auth,  os_type,  push_token,  owner_id,  a_seq
		  	, C.company_name
			, IFNULL(E.rate, 0) AS employer_rating
			, IFNULL(M.rate, 0) AS manager_rating
		FROM 
			worker w 
			LEFT OUTER JOIN company C 
				ON w.company_seq = C.company_seq
			LEFT OUTER JOIN 
				(SELECT 
					worker_seq
					, rate 
				FROM 
					tbl_worker_rating 
				WHERE 
					rate = 1 
					AND rating_type = 'I' 
					<choose>
						<when test="employer_seq neq '' and	employer_seq neq	null">
							AND	employer_seq = #{employer_seq}	
						</when>
						<otherwise>
							AND employer_seq = -1		
						</otherwise>
					</choose>
				GROUP BY 
					worker_seq) 
				E ON w.worker_seq = E.worker_seq
			LEFT OUTER JOIN 
				(SELECT 
					worker_seq
					, rate 
				FROM 
					tbl_worker_rating 
				WHERE 
					rate = 1 
					AND rating_type = 'M' 
					<choose>
						<when test="manager_seq neq '' and	 manager_seq neq	null">
							AND	manager_seq = #{manager_seq}	
						</when>
						<otherwise>
							AND manager_seq = -1		
						</otherwise>
					</choose>
				GROUP BY 
					worker_seq) M ON w.worker_seq = M.worker_seq
			WHERE 
				1 = 1 
				<if test="company_seq     neq '' and company_seq     neq null"> AND w.company_seq   = #{company_seq} </if>
	    		<if test="srh_use_yn      neq '' and srh_use_yn      neq null"> AND w.use_yn        = #{srh_use_yn}      </if>
	    		<if test="srh_del_yn      neq '' and srh_del_yn      neq null"> AND w.del_yn        = #{srh_del_yn}      </if>
	    		<if test="term            neq '' and term            neq null"> AND fn_decrypt(w.worker_name) LIKE '%${term}%' </if>
	    		<if test="owner_id           neq '' and owner_id           neq null"> AND w.owner_id			= #{owner_id} </if>
			ORDER BY 
				<!-- worker_name -->
				ilbo_last_date DESC		
  	</select>

  	<select id="getWorkNameList3" parameterType="WorkerDTO" resultType="WorkerDTO">
  		/* 현장명만 조회 ilgaja_common.getWorkNameList3 */
		SELECT 
	   		w.work_seq AS CODE
	  		, w.work_name AS label
		FROM
	  		work w
	 	WHERE
	 		w.employer_seq = #{employer_seq}
	  		<if test="term            neq '' and term            neq null"> AND w.work_name LIKE '%${term}%'  </if>
	  		<if test="srh_use_yn      neq '' and srh_use_yn      neq null"> AND w.use_yn        = #{srh_use_yn}      </if>
  	</select>
  
  	<select id="getWorkNameList4" parameterType="WorkDTO" resultType="WorkDTO">
		/* 구직자관리 > 상세검색 > 일자리선택시 사용 ilgaja_common.getWorkNameList4 */
   		SELECT
        	e.employer_seq
        	, e.employer_name
        	, e.employer_feature
        	, w.work_seq AS CODE
        	, CONCAT(
          	(SELECT
               	company_name
          	FROM
               	company
          	WHERE company_seq = e.company_seq),
          	" / ",
          	e.employer_name,
          	" / (",
          	(SELECT
               	company_name
          	FROM
               	company
          	WHERE company_seq = w.company_seq),
       		") ",
       		w.work_name,
       		" / (",
       		c.company_name,
       		") ",
       		FN_DECRYPT(m.manager_name),
       		" ",
       		FN_DECRYPT(m.manager_phone)) AS label
        	, w.work_seq
        	, w.work_name
        	, w.work_arrival
        	, w.work_finish
        	, w.work_addr
        	, w.work_sido
        	, w.work_sigugun
        	, w.work_dongmyun
        	, w.work_rest
        	, w.work_latlng
        	, w.work_addr_comment
        	, w.work_breakfast_yn
        	, w.work_age_min
        	, w.work_age
        	, w.work_blood_pressure
        	, FN_DECRYPT(w.work_manager_name) AS work_manager_name
        	, w.work_manager_fax
        	, FN_DECRYPT(w.work_manager_phone) AS work_manager_phone
        	, FN_DECRYPT(w.work_manager_email) AS work_manager_email
        	, m.owner_id
        	, w.work_memo
        	, m.manager_seq
        	, FN_DECRYPT(m.manager_name) AS manager_name
        	, FN_DECRYPT(m.manager_phone) AS manager_phone
        	, m.owner_id
        	, m.company_seq
        	, c.company_name
		FROM
        	ilbo i
        	LEFT JOIN employer e
           		ON i.employer_seq = e.employer_seq
        	LEFT JOIN WORK w
           		ON i.work_seq = w.work_seq
        	LEFT JOIN manager m
           		ON i.manager_seq = m.manager_seq
        	LEFT JOIN company c
           		ON i.work_company_seq = c.company_seq
   		WHERE 
      		i.use_yn = 1
        	AND ilbo_date >= DATE_FORMAT(NOW(), '%Y-%m-%d')
        	AND ilbo_status_code NOT IN ('STA007', 'STA008', 'STA009')
        	AND output_status_code NOT IN ('100003', '100005', '100014', '100015')
        	AND e.use_yn = 1
        	AND w.use_yn = 1
        	AND m.use_yn = 1
        	AND (
           		w.work_name LIKE '%${term}%' 
           		OR e.employer_name LIKE '%${term}%' 
           		OR fn_decrypt(m.manager_phone) LIKE '%${term}%'
        	)
   		GROUP BY 
      		i.employer_seq,
        	i.work_seq,
        	i.manager_seq
  	</select>

  	<select id="getTodayWorkerList" parameterType="WorkerDTO" resultType="WorkerDTO">
    	/* 출근자 조회 ilgaja_common.getTodayWorkerList */
<!--
    SELECT t.worker_seq as code, w.worker_name as text, CONCAT(w.worker_name, ' (', w.worker_jumin, ')') AS label, w.*
-->
    	SELECT 
    		t.worker_seq AS code
    		, w.worker_name AS text
    		, w.worker_name AS label
    		, w.*
    	FROM 
    		today_worker t 
    		LEFT OUTER JOIN worker w 
    			ON t.worker_seq = w.worker_seq 
    	WHERE 
    		1 = 1
      		AND DATE_FORMAT(t.attendance_time, '%Y-%m-%d') = #{start_reg_date}
    		<if test="srh_distinct_yn neq '' and srh_distinct_yn neq null and srh_distinct_yn eq 1"> 
      			AND NOT EXISTS (
        			SELECT 
        				1
        			FROM 
        				ilbo i
        			WHERE 
        				DATE_FORMAT(i.ilbo_date, '%Y-%m-%d') = #{start_reg_date}
          				AND i.worker_seq = t.worker_seq)
    		</if>
    		<if test="srh_company_seq neq '' and srh_company_seq neq null"> AND t.company_seq   = #{srh_company_seq} </if>
    		<if test="company_seq     neq '' and company_seq     neq null"> AND t.company_seq   = #{company_seq} </if>
    		<if test="srh_use_yn      neq '' and srh_use_yn      neq null"> AND t.use_yn        = #{srh_use_yn}      </if>
    		<if test="term            neq '' and term            neq null"> AND fn_decrypt(w.worker_name) LIKE '%${term}%' </if>
    	ORDER BY 
    		w.worker_name
  	</select>

  	<select id="getWorkNameList" parameterType="WorkDTO" resultType="WorkDTO">
    	/* 현장 조회1 ilgaja_common.getWorkNameList */
		SELECT 
	  		e.employer_seq
	  		, e.employer_name
	  		, e.employer_num
	  		, e.employer_feature
	  		, w.work_seq AS CODE
	  		, CONCAT(
	    		(SELECT company_name FROM company WHERE company_seq = e.company_seq)
	    		, " / "
	    		, e.employer_name
	    		, " / ("
	    		, (SELECT company_name FROM company WHERE company_seq = w.company_seq)
	    		, ") "
	    		, w.work_name
	    		, " / ("
	    		, c.company_name
	    		, ") "
	    		, fn_decrypt (m.manager_name)
	    		, " "
	    		, fn_decrypt (m.manager_phone)) AS label
	  		, w.work_seq
	  		, w.work_name
	  		, w.work_arrival
	  		, w.work_finish
	  		, w.work_addr
	  		, w.work_sido
	  		, w.work_sigugun
	  		, w.work_dongmyun
	  		, w.work_rest
	  		, w.work_latlng
	  		, w.work_addr_comment
	  		, w.work_breakfast_yn
	  		, w.work_age_min
	  		, w.work_age
	  		, w.work_blood_pressure
	  		, FN_DECRYPT(w.work_manager_name) AS work_manager_name
	  		, w.work_manager_fax
	  		, FN_DECRYPT(w.work_manager_phone) AS work_manager_phone
	  		, FN_DECRYPT(w.work_manager_email) AS work_manager_email
	  		, m.owner_id
	  		, w.work_memo
	  		, m.manager_seq
	  		, FN_DECRYPT(m.manager_name) AS manager_name
	  		, FN_DECRYPT(m.manager_phone) AS manager_phone
	  		, m.owner_id
	  		, m.company_seq
	  		, c.company_name 
	  		, w.labor_contract_seq
	  		, co.contract_name AS labor_contract_name
	  		, w.receive_contract_seq
	  		, co2.contract_name AS receive_contract_name
		FROM
	  		employer e
	  		LEFT OUTER JOIN WORK w 
	  			ON e.employer_seq = w.employer_seq 
	  		LEFT OUTER JOIN tbl_relation_wm wm 
	  			ON w.work_seq = wm.work_seq 
	  		LEFT OUTER JOIN manager m 
	  			ON wm.manager_seq = m.manager_seq
	  		LEFT OUTER JOIN company c 
	  			ON m.company_seq = c.company_seq  
	  		LEFT OUTER JOIN tbl_contract co
	  			ON w.labor_contract_seq = co.contract_seq
	  		LEFT OUTER JOIN tbl_contract co2
	  			ON w.receive_contract_seq = co2.contract_seq
		WHERE 
			e.use_yn = 1 
	  		AND w.use_yn = 1 
	  		AND wm.use_yn = 1 
	  		AND m.use_yn = 1 
	  		<choose>
	  			<when test="orderFlag neq '' and orderFlag neq null and orderFlag == 'Y'.toString()">
	  				<if test="term            neq '' and term            neq null"> AND (w.work_name LIKE '%${term}%' OR e.employer_name LIKE '%${term}%' OR fn_decrypt(m.manager_phone) LIKE '%${term}%') </if>
	  			</when>
	  			<otherwise>
					<if test="term            neq '' and term            neq null"> AND (w.work_name LIKE '%${term}%' OR e.employer_name LIKE '%${term}%') </if>  	
	  			</otherwise>
	  		</choose>
  			<if test="owner_id           neq '' and owner_id           neq null"> AND w.owner_id = #{owner_id} </if>
  			<if test="work_latlng        neq '' and work_latlng        neq null"> AND w.work_latlng = #{work_latlng} </if>
  		ORDER BY 
  			w.work_seq DESC
  	</select>
  
	<select id="selectEmployerList" parameterType="EmployerDTO" resultType="EmployerDTO">
    	/* 구인처 조회 ilgaja_common.getWorkList */
    	SELECT 
			employer_seq AS code
			, employer_name AS label
			, e.company_seq
			, e.employer_num
			, e.employer_pass
			, e.employer_name
			, FN_DECRYPT(e.employer_owner) as employer_owner
			, e.employer_business
			, e.employer_sector
			, e.is_tax
			, FN_DECRYPT(e.tax_name) as tax_name
			, FN_DECRYPT(e.tax_phone) as tax_phone
			, FN_DECRYPT(e.employer_tel) as employer_tel
			, e.employer_fax
			, FN_DECRYPT(e.employer_phone) as employer_phone
			, FN_DECRYPT(e.employer_phone1) as employer_phone1
			, FN_DECRYPT(e.employer_phone2) as employer_phone2
			, FN_DECRYPT(e.employer_phone3) as employer_phone3
			, FN_DECRYPT(e.employer_phone4) as employer_phone4
			, FN_DECRYPT(e.employer_email) as employer_email
			, e.employer_addr
			, e.employer_feature
			, e.employer_memo
			, e.use_yn
			, e.owner_id
			, e.manager_seq
			, e.reg_date
			, e.reg_admin
			, e.mod_date
			, e.mod_admin
			, e.employer_corp_scan_yn
			, e.employer_etc_scan_yn
			, e.visit_date
			, e.visit_count
			, e.visit_type
			, e.os_type
			, e.push_token
			, e.app_version 
    	FROM 
    		employer e
    	WHERE 
    		1 = 1
    		<if test="company_seq     neq '' and company_seq     neq null"> AND company_seq   = #{company_seq } </if>
    		<if test="srh_use_yn      neq '' and srh_use_yn      neq null"> AND use_yn        = #{srh_use_yn}      </if>
    		<if test="term            neq '' and term            neq null"> AND (employer_name LIKE '%${term}%') </if>
   		ORDER BY employer_seq
  	</select>
  
	<select id="getManagerNameList" parameterType="ManagerDTO" resultType="ManagerDTO">
    	/* 현장매니저 조회 ilgaja_common.getManagerNameList */
    	SELECT 
    		m.manager_seq as code
    		, FN_DECRYPT(m.manager_name) as text 
    		, CONCAT(fn_decrypt(m.manager_name), " ", fn_decrypt(m.manager_phone), " ", c.company_name) AS label 
    		, c.company_name
    		, m.manager_seq
			, FN_DECRYPT(m.manager_phone) as manager_phone
			, m.manager_pass
			, FN_DECRYPT(m.manager_name) as manager_name
			, m.manager_type
			, m.manager_memo
			, m.manager_etc
			, m.parent_company_seq
			, m.company_seq
			, m.employer_seq
			, m.manager_push_yn
			, m.push_token
			, m.app_version
			, m.os_type
			, m.auth_num
			, m.use_yn
			, m.owner_id
			, m.reg_date
			, m.reg_admin
			, m.mod_date
			, m.mod_admin
			, m.visit_date
			, m.visit_count
			, m.visit_type 
    	FROM 
    		manager m
    		LEFT OUTER JOIN company c 
    			ON m.company_seq = c.company_seq
    	WHERE 
    		1 = 1
    		<if test="use_yn     neq '' and  use_yn neq null"> AND m.use_yn   = #{use_yn} </if>
    		<if test="company_seq     neq '' and company_seq     neq null"> AND m.company_seq   = #{company_seq} </if>
    		<if test="employer_seq     neq '' and employer_seq     neq null"> AND m.employer_seq   = #{employer_seq} </if>
    		<if test="manager_type     neq '' and manager_type     neq null"> AND m.manager_type   = #{manager_type} </if>
    		<if test="term            neq '' and term            neq null"> 
		    	AND ( fn_decrypt(m.manager_name) LIKE '%${term}%'  OR fn_decrypt(m.manager_phone) LIKE '%${term}%' ) 
	    	</if>
	    	<if test="owner_id           neq '' and owner_id           neq null"> AND m.owner_id			= #{owner_id} </if>
	    ORDER BY 
	    	m.manager_name
  	</select>
	  
  	<select id="chkManagerPhone" parameterType="CommonDTO" resultType="int">
    	/* 메니져 폰확인 ilgaja_common.chkManagerPhone */
    	SELECT 
    		COUNT(manager_seq) AS CNT
    	FROM 
    		manager
    	WHERE 
    		1 = 1
    		<if test="use_yn      neq '' and use_yn      neq null"> AND use_yn        = #{use_yn}      </if>
    		<if test="manager_phone            neq '' and manager_phone neq null"> AND fn_decrypt(manager_phone) = #{manager_phone}            </if>
    		<if test="company_seq            neq '' and company_seq            neq null"> AND company_seq = #{company_seq}            </if>
  	</select>
  
  	<select id="getSearchEmployerList" parameterType="EmployerDTO" resultType="EmployerDTO">
    	/* 구인처 조회 ilgaja_common.getSearchEmployerList */
    	SELECT 
    		e.employer_seq AS code,
    		e.employer_name AS text, 
    		e.employer_name,
    		e.employer_num,
    		c.company_seq,
    		c.company_name,
    		CONCAT(
    			c.company_name, " | ", e.employer_name,
    			IF(FN_DECRYPT(e.employer_owner) IS NULL OR fn_decrypt (e.employer_owner) = '', '', ' | ' ), IFNULL(FN_DECRYPT(e.employer_owner), ''), 

    			IF( e.employer_num IS NULL OR e.employer_num = '', '', ' | '), IFNULL(e.employer_num, ''), 
    			IF( e.employer_business IS NULL OR e.employer_business = '', '', ' | ' ), IFNULL(e.employer_business, ''), 
    			IF( e.employer_sector IS NULL OR e.employer_sector = '', '', ' | ' ), IFNULL(e.employer_sector, ''), 
<!--     			IF(COUNT(DISTINCT(wm.manager_seq)) > 0, ' | ', ''),  -->
    			IF(wm.manager_seq IS NULL, '', (IF(COUNT(DISTINCT (wm.manager_seq)) > 0, ' | ', ''))),
<!--     			IF(COUNT(DISTINCT(wm.manager_seq)) > 5, CONCAT(SUBSTRING_INDEX(GROUP_CONCAT(DISTINCT(fn_decrypt(m.manager_name))), ',', 5), '...'), GROUP_CONCAT(DISTINCT(fn_decrypt(m.manager_name)))), -->
				IF(
					wm.manager_seq IS NULL
					, ''
					, (
						IF(
							COUNT(DISTINCT (wm.manager_seq)) > 5
							, CONCAT(
								SUBSTRING_INDEX(
									GROUP_CONCAT(
										DISTINCT (
											CONCAT(
												fn_decrypt (m.manager_name), '(', IFNULL(SUBSTRING(fn_decrypt(m.manager_phone), -4), ''),')'
											)
										) ORDER BY m.manager_type 
									)
								, ',', 5)
							, '...')
							, GROUP_CONCAT(
								DISTINCT (
									CONCAT(fn_decrypt (m.manager_name)
										, '('
										, IFNULL(
											SUBSTRING(fn_decrypt(m.manager_phone), -4)
											, ''
										)
										,')'
									)
								)
							  ORDER BY m.manager_type
							)
						)
					)
				),
      			IF(e.reg_date IS NULL OR e.reg_date = '', '', ' | '), IFNULL(e.reg_date, '')
    		) AS label
    		, e.labor_contract_seq
    		, e.receive_contract_seq
    	FROM 
    		employer e
    		LEFT OUTER JOIN company c 
    			ON e.company_seq = c.company_seq
    		LEFT OUTER JOIN 
    			(SELECT
      				manager_seq,
      				employer_seq
    			FROM
      				tbl_relation_wm
    			UNION
    			SELECT
      				manager_seq,
      				employer_seq
    			FROM
      				manager m
    			WHERE m.manager_type = 'E'
      				AND m.use_yn = '1') wm
    			ON e.employer_seq = wm.employer_seq
  			LEFT OUTER JOIN manager m
    			ON wm.manager_seq = m.manager_seq
    	WHERE 
    		1 = 1
    		<if test="company_seq     neq '' and company_seq     neq null"> AND e.company_seq   = #{company_seq} </if>
    		<if test="srh_use_yn      neq '' and srh_use_yn      neq null"> AND e.use_yn        = #{srh_use_yn}      </if>
    		<if test="term            neq '' and term            neq null"> AND (c.company_name LIKE '%${term}%' OR e.employer_name LIKE '%${term}%') </if>
    	GROUP BY e.employer_seq
<!--     	ORDER BY  -->
<!--     		CONCAT(c.company_name, " ", e.employer_name) -->
  	</select>
  
   	<select id="getSearchWorkList" parameterType="WorkDTO" resultType="WorkDTO">
    	/* 통합 조회 ilgaja_common.getSearchWorkList */
    	SELECT 
    		c.company_name
    		, e.employer_name
    		, w.work_seq as code 
    		, w.work_name as text 
    		, CONCAT( IFNULL(c.company_name,''), " | ", IFNULL(e.employer_name,''), " | ", IFNULL(w.work_name,''), " | ", IFNULL(fn_decrypt(m.manager_name),''), " | ", IFNULL(fn_decrypt(m.manager_phone),'') ) AS label
      		, w.work_seq
			, c.company_seq
			, e.employer_seq
			, w.work_name
			, w.work_arrival
			, w.work_finish
			, w.work_addr
			, w.work_latlng
			, w.work_addr_comment
			, w.work_breakfast_yn
			, w.work_age_min
			, w.work_age
			, w.work_blood_pressure
			, FN_DECRYPT(w.work_manager_name) as work_manager_name
			, w.work_manager_fax
			, FN_DECRYPT(w.work_manager_phone) as work_manager_phone
			, FN_DECRYPT(w.work_manager_email) as work_manager_email
			, w.work_memo
			, w.work_comment
			, m.manager_seq
			, w.is_worker_info
			, w.use_yn
			, w.owner_id
			, w.complete_count
			, w.ilbo_last_date
			, w.reg_date
			, w.reg_admin
			, w.mod_date
			, w.mod_admin
			, FN_DECRYPT(m.manager_phone) as manager_phone
			, FN_DECRYPT(m.manager_name) as manager_name 
    	FROM
	  		employer e
	  		LEFT OUTER JOIN WORK w 
	  			ON e.employer_seq = w.employer_seq
	  		LEFT OUTER JOIN company c  
	  			ON w.company_seq = c.company_seq 
	  		LEFT OUTER JOIN tbl_relation_wm wm 
	  			ON w.work_seq = wm.work_seq
	  		LEFT OUTER JOIN manager m 
	  			ON wm.manager_seq = m.manager_seq
	  	WHERE 
	  		e.use_yn =1 
	  		AND w.use_yn =1 
	  		AND c.use_yn =1 
	  		AND wm.use_yn =1 
	  		AND m.use_yn =1
    		AND (
    			w.work_name LIKE '%${term}%' 
    			OR e.employer_name LIKE '%${term}%'
    			OR FN_DECRYPT(m.manager_name) LIKE '%${term}%'
    			OR FN_DECRYPT(m.manager_phone) LIKE '%${term}%') 
    	ORDER BY 
    		w.work_seq DESC
  	</select>
  
	<select id="selectWorkerKindCount" parameterType="WorkerDTO" resultType="hmap">
		/* 직종별 출역 횟수 조회 ilgaja_common.selectWorkerKindCount */
		SELECT 
			i.*
			, c.job_name AS code_name 
		FROM 
		 	(SELECT 
		 		ilbo_kind_code
		 		, COUNT(ilbo_seq) AS ct 
		 	FROM 
		 		ilbo 
		 	WHERE 
		 		use_yn= 1 
		 		AND worker_seq = #{worker_seq} 
		 		AND ilbo_fee > 0 
		 	GROUP BY 
		 		ilbo_kind_code) i 
		 	LEFT OUTER JOIN tbl_job c 
		 		ON i.ilbo_kind_code = c.job_seq 
		ORDER BY 
			ct DESC
	</select>
  	
  	<insert id="insertWorkerLandingLog" parameterType="WorkerLandingLogDTO">
		INSERT INTO tbl_worker_landing_log (
			connection_ip,
		  	os_type,
		  	reg_date
		) VALUES (
			#{connection_ip},
		  	#{os_type},
		  	NOW()
		)
  	</insert>
  	
  	<select id="selectRecommendationCount" parameterType="CommonDTO" resultType="int">
  		WITH tbl_dummy AS (SELECT FN_ENCRYPT(#{recommendation }) AS recommendation)
  		
  		SELECT 
			SUM(cnt) 
		FROM
			(SELECT 
				COUNT(company_seq) AS cnt 
			FROM
				company 
		  	WHERE use_yn = 1 
		    	AND recommendation = (SELECT recommendation FROM tbl_dummy) 
		  	UNION ALL 
		  	SELECT 
		    	COUNT(admin_seq) AS cnt 
		  	FROM
		    	admin 
		  	WHERE use_yn = 1 
		    	AND recommendation = (SELECT recommendation FROM tbl_dummy)) A
  	</select>
  	
</mapper>
