<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.nemo.kr.mapper.ilgaja.write.WorkMapper">

  	<select id="getWorkTotalCnt" parameterType="WorkDTO" resultType="int">
  		/* 현장정보 조회 work.getWorkTotalCnt */
    	SELECT 
    		COUNT(1)
    	FROM 
    		work w 
    		LEFT JOIN employer e ON w.employer_seq = e.employer_seq
            LEFT JOIN company c ON w.company_seq = c.company_seq
    	WHERE 
    		1 = 1
    		${where}
    		<if test="srh_company_seq neq '' and srh_company_seq neq null"> AND w.company_seq = #{srh_company_seq} </if>
    		<if test="start_reg_date neq '' and start_reg_date neq null"> AND DATE_FORMAT(w.reg_date, '%Y-%m-%d') <![CDATA[ >= ]]> #{start_reg_date} </if>
    		<if test="end_reg_date neq '' and end_reg_date neq null"> AND DATE_FORMAT(w.reg_date, '%Y-%m-%d') <![CDATA[ <= ]]> #{end_reg_date} </if>
    		<if test="srh_use_yn neq '' and srh_use_yn neq null"> AND w.use_yn = #{srh_use_yn} </if>
    		<if test="owner_id neq '' and owner_id neq null"> AND w.owner_id = #{owner_id} </if>
  	</select>

  	<select id="getWorkList" parameterType="WorkDTO" resultType="WorkDTO">
  		/* work.xml getWorkList */
		SELECT 
			c.company_name
			, e.employer_name
			, w.work_seq
			, w.company_seq
			, w.employer_seq
			, w.work_name
			, w.work_arrival
			, w.work_finish
			, w.work_addr
			, w.work_latlng
			, w.work_addr_comment
			, w.work_breakfast_yn
			, w.work_age_min
			, w.work_age
			, w.work_blood_pressure
			, w.manager_seq
			, FN_DECRYPT(w.manager_name) as manager_name
			, FN_DECRYPT(w.manager_phone) as manager_phone
			, FN_DECRYPT(w.work_manager_name) as work_manager_name
			, FN_DECRYPT(w.work_manager_phone) as work_manager_phone
			, FN_DECRYPT(w.work_manager_email) as work_manager_email
			, w.work_manager_fax
			, w.work_memo
			, w.work_comment
			, w.is_worker_info
			, w.use_yn
			, w.owner_id
			, w.complete_count
			, w.ilbo_last_date
			, w.reg_date
			, w.reg_admin
			, w.mod_date
			, w.mod_admin 
			, w.out_count
			, w.total_out_count 
			, w.day_count 
			, IFNULL(wm.wm_seq, 0) AS wm_seq
			, w.labor_contract_seq
			, co.contract_name AS labor_contract_name
			, w.receive_contract_seq
			, co2.contract_name AS receive_contract_name
		FROM		
			WORK w 
			LEFT JOIN employer e ON w.employer_seq = e.employer_seq 
		    LEFT JOIN company c ON w.company_seq = c.company_seq
		    LEFT JOIN tbl_relation_wm wm ON w.work_seq = wm.work_seq AND w.employer_seq = wm.employer_seq AND w.manager_seq = wm.manager_seq
		    LEFT OUTER JOIN tbl_contract co ON w.labor_contract_seq = co.contract_seq
		    LEFT OUTER JOIN tbl_contract co2 ON w.receive_contract_seq = co2.contract_seq
		WHERE 
			1 = 1
	        ${where}
		     <if test="company_seq neq '' and company_seq neq null"> AND w.company_seq = #{company_seq} </if>
		     <if test="start_reg_date  neq '' and start_reg_date neq null"> AND DATE_FORMAT(w.reg_date, '%Y-%m-%d') <![CDATA[ >= ]]> #{start_reg_date} </if>
		     <if test="end_reg_date neq '' and end_reg_date neq null"> AND DATE_FORMAT(w.reg_date, '%Y-%m-%d') <![CDATA[ <= ]]> #{end_reg_date} </if>
		     <if test="srh_use_yn neq '' and srh_use_yn neq null"> AND w.use_yn = #{srh_use_yn} </if>
		     <if test="owner_id neq '' and owner_id neq null"> AND w.owner_id = #{owner_id} </if>
		ORDER BY ${sidx} ${sord}
		<if test="paging != null">
			<choose>
		        <when test="paging.pageNo gt 0">
		    		LIMIT ${paging.startPage}, ${paging.endPage}
		        </when>
		        <otherwise>
		    		LIMIT 0, ${paging.endPage}
		        </otherwise>
		    </choose>
		</if>
  	</select>
  
  	<select id="getSelectInfo" parameterType="WorkDTO" resultType="WorkDTO">
  		/* work.xml getSelectInfo */
  		SELECT
			w.work_seq
			, w.company_seq
			, w.employer_seq
			, w.work_name
			, w.work_arrival
			, w.work_finish
			, w.work_addr
			, w.work_latlng
			, w.work_addr_comment
			, w.work_breakfast_yn
			, w.work_age_min
			, w.work_age
			, w.work_blood_pressure
			, FN_DECRYPT(w.work_manager_name) as work_manager_name
			, w.work_manager_fax
			, FN_DECRYPT(w.work_manager_phone) as work_manager_phone
			, FN_DECRYPT(w.work_manager_email) as work_manager_email
			, w.work_memo
			, w.work_comment
			, w.manager_seq
			, FN_DECRYPT(w.manager_phone) as manager_phone
			, FN_DECRYPT(w.manager_name) as manager_name
			, w.is_worker_info
			, w.use_yn
			, w.owner_id
			, w.complete_count
			, w.ilbo_last_date
			, w.reg_date
			, w.reg_admin
			, w.mod_date
			, w.mod_admin 
  			, e.employer_name 
  			, w.labor_contract_seq
  			, co.contract_name AS labor_contract_name
  			, w.receive_contract_seq
  			, co2.contract_name AS receive_contract_name
  			, e.sign_manager_seq
  			, e.sign_manager_type
  		FROM 
  			work w 
  			LEFT OUTER JOIN employer e on w.employer_seq = e.employer_seq 
  			LEFT OUTER JOIN tbl_contract co ON w.labor_contract_seq = co.contract_seq
  			LEFT OUTER JOIN tbl_contract co2 ON w.receive_contract_seq = co2.contract_seq
  		WHERE
  			w.work_seq = #{work_seq}
  	</select>
	  
  	<insert id="setWorkCell" parameterType="WorkDTO" useGeneratedKeys="true" keyProperty="work_seq">
	    /* 현장정보 생성 work.setWorkCell */
    	INSERT INTO work SET
    		reg_date = NOW()
    		, reg_admin = #{reg_admin}
    		, mod_admin = #{reg_admin} 
        	<if test="company_seq neq '' and company_seq neq null">, company_seq = #{company_seq}</if>
        	<if test="employer_seq neq '' and employer_seq neq null">
        		, employer_seq = #{employer_seq}
        		, labor_contract_seq = CASE WHEN (SELECT labor_contract_seq FROM employer WHERE employer_seq = #{employer_seq }) != '0' THEN (SELECT labor_contract_seq FROM employer WHERE employer_seq = #{employer_seq }) ELSE '0' END 
        		, receive_contract_seq =  CASE WHEN (SELECT receive_contract_seq FROM employer WHERE employer_seq = #{employer_seq }) != '0' THEN (SELECT receive_contract_seq FROM employer WHERE employer_seq = #{employer_seq }) ELSE '0' END
        	</if>
        	<if test="owner_id neq '' and owner_id neq null"> ,owner_id = #{owner_id} </if>  
        	<if test="work_name neq null">, work_name = #{work_name}  </if>
      		<if test="work_arrival neq null">, work_arrival = #{work_arrival} </if>
      		<if test="work_finish neq null">, work_finish = #{work_finish} </if>
 	  		<if test="work_addr neq null">, work_addr = #{work_addr} </if>
 	  		<if test="work_sido neq null and work_sido neq ''"> , work_sido = #{work_sido} </if>
 	  		<if test="work_sigugun neq null and work_sigugun neq ''"> , work_sigugun = #{work_sigugun} </if>
 	  		<if test="work_dongmyun neq null and work_dongmyun neq ''"> , work_dongmyun = #{work_dongmyun} </if>
 	  		<if test="work_rest neq null and work_rest neq ''"> , work_rest = #{work_rest} </if>
 	  		<if test="work_latlng neq null"> , work_latlng = #{work_latlng} </if>
      		<if test="work_breakfast_yn neq null">, work_breakfast_yn = #{work_breakfast_yn} </if>
      		<if test="work_age_min neq null">, work_age_min = #{work_age_min} </if>
      		<if test="work_age neq null">, work_age = #{work_age} </if>
      		<if test="work_blood_pressure neq null">, work_blood_pressure = #{work_blood_pressure} </if>
      		<if test="is_worker_info neq null">, is_worker_info  = #{is_worker_info} </if>
      		<if test="manager_seq neq null and manager_seq neq ''">, manager_seq = #{manager_seq}</if>
      		<if test="manager_name neq null and manager_name neq ''">, manager_name = FN_ENCRYPT(#{manager_name})</if>
      		<if test="manager_phone neq null and manager_phone neq ''">, manager_phone = FN_ENCRYPT(#{manager_phone})</if>
      		<if test="work_manager_name neq null">, work_manager_name = FN_ENCRYPT(#{work_manager_name})</if>
      		<if test="work_manager_phone neq null">, work_manager_phone = FN_ENCRYPT(#{work_manager_phone}) </if>
      		<if test="work_memo neq null">, work_memo = #{work_memo} </if>
  	</insert>

  	<update id="setWorkInfo" parameterType="WorkDTO">
    	/* 현장정보 수정 work.setWorkInfo  jjh 수정 choose 방법 수정함 */
    	UPDATE work SET
      		mod_date = NOW()
      		<if test="mod_admin neq '' and mod_admin neq null"> , mod_admin = #{mod_admin } </if>
      		<if test="company_seq neq null"> , company_seq = #{company_seq } </if>
      		<if test="employer_seq neq null"> , employer_seq = #{employer_seq } </if>
      		<if test="work_name neq null"> , work_name = #{work_name } </if>
      		<if test="work_arrival neq null"> , work_arrival = #{work_arrival } </if>
      		<if test="work_finish neq null"> , work_finish = #{work_finish } </if>
 	  		<if test="work_addr neq null"> , work_addr = #{work_addr } </if>
 	  		<if test="work_sido neq null"> , work_sido = #{work_sido } </if>
 	  		<if test="work_sigugun neq null"> , work_sigugun = #{work_sigugun } </if>
 	  		<if test="work_dongmyun neq null"> , work_dongmyun = #{work_dongmyun } </if>
 	  		<if test="work_rest neq null"> , work_rest = #{work_rest } </if>
      		<if test="work_latlng neq null"> , work_latlng = #{work_latlng } </if>
      		<if test="work_addr_comment neq null"> , work_addr_comment = #{work_addr_comment } </if>
      		<if test="work_breakfast_yn neq null"> , work_breakfast_yn = #{work_breakfast_yn } </if>
      		<if test="work_age_min neq null"> ,  work_age_min = #{work_age_min} </if>
      		<if test="work_age neq null"> , work_age = #{work_age } </if>
      		<if test="work_blood_pressure neq null"> , work_blood_pressure = #{work_blood_pressure} </if>
      		<if test="is_worker_info neq null"> , is_worker_info = #{is_worker_info} </if>
      		<if test="work_manager_name neq null"> , work_manager_name = FN_ENCRYPT(#{work_manager_name})  </if>
      		<if test="work_manager_fax neq null"> , work_manager_fax = #{work_manager_fax } </if>
      		<if test="work_manager_phone neq null"> , work_manager_phone = FN_ENCRYPT(#{work_manager_phone})  </if>
      		<if test="work_manager_email neq null"> , work_manager_email = FN_ENCRYPT(#{work_manager_email})  </if>
      		<if test="work_memo neq null"> , work_memo = #{work_memo } </if>
      		<if test="work_comment neq null"> , work_comment = #{work_comment } </if>
      		<if test="manager_seq neq null and manager_seq neq ''"> , manager_seq = #{manager_seq } </if>
      		<if test="manager_name neq null and manager_name neq ''"> , manager_name = FN_ENCRYPT(#{manager_name})  </if>
      		<if test="manager_phone neq null"> , manager_phone = FN_ENCRYPT(#{manager_phone}) </if>
      		<if test="use_yn neq '' and use_yn neq null"> , use_yn = #{use_yn } </if>
      		<if test="reg_admin neq '' and reg_admin neq null"> , mod_admin = #{reg_admin} </if>
      		<if test="labor_contract_seq neq '' and labor_contract_seq neq null">
      			, labor_contract_seq = #{labor_contract_seq }
      		</if>
      		<if test="receive_contract_seq neq '' and receive_contract_seq neq null">
      			, receive_contract_seq = #{receive_contract_seq }
      		</if>
    	WHERE 
    		work_seq = #{work_seq}
  	</update>

<!--
  <delete id="removeWorkInfo" parameterType="WorkDTO">
    /* 현장정보 삭제 work.removeWorkInfo */
    DELETE FROM work
    WHERE work_seq = #{work_seq}
  </delete>
-->
  	<update id="removeWorkInfo" parameterType="WorkDTO">
    	/* 현장정보 삭제 work.removeWorkInfo */
    	UPDATE 
    		work 
    	SET
      		use_yn = 0
      		<if test="reg_admin neq '' and reg_admin neq null"> , mod_admin = #{reg_admin} </if> 
    	WHERE 
    		work_seq IN
    			<foreach collection="sel_work_seq" item="sel_seq"  open="(" close=")" separator=", ">
      				#{sel_seq}
    			</foreach>
  	</update>

	<select id="selectWorkInfo" parameterType="WorkDTO" resultType="WorkDTO">
		WITH tbl_dummy AS (SELECT 
			<if test="manager_phone neq '' and manager_phone neq null">
				FN_ENCRYPT(#{manager_phone }) AS phoneNo
			</if>
			<if test="work_manager_phone neq '' and work_manager_phone neq null">
				FN_ENCRYPT(#{work_manager_phone }) AS work_manager_phone
			</if>
		)
		SELECT
			w.work_seq
			, w.company_seq
			, w.employer_seq
			, w.work_name
			, w.work_arrival
			, w.work_finish
			, w.work_addr
			, w.work_latlng
			, w.work_addr_comment
			, w.work_breakfast_yn
			, w.work_age_min
			, w.work_age
			, w.work_blood_pressure
			, FN_DECRYPT(w.work_manager_name) as work_manager_name
			, w.work_manager_fax
			, FN_DECRYPT(w.work_manager_phone) as work_manager_phone
			, FN_DECRYPT(w.work_manager_email) as work_manager_email
			, w.work_memo
			, w.work_comment
			, w.manager_seq
			, FN_DECRYPT(w.manager_phone) as manager_phone
			, FN_DECRYPT(w.manager_name) as manager_name
			, w.is_worker_info
			, w.use_yn
			, w.owner_id
			, w.complete_count
			, w.ilbo_last_date
			, w.reg_date
			, w.reg_admin
			, w.mod_date
			, w.mod_admin 
			, w.labor_contract_seq
			, co.contract_name AS labor_contract_name
			, w.receive_contract_seq
			, co2.contract_name AS receive_contract_name
		FROM
			work w
			LEFT OUTER JOIN tbl_contract co ON w.labor_contract_seq = co.contract_seq
			LEFT OUTER JOIN tbl_contract co2 ON w.receive_contract_seq = co2.contract_seq
		WHERE
			1 = 1
			AND work_manager_phone = (SELECT work_manager_phone FROM tbl_dummy) 
			OR manager_phone = (SELECT phoneNo FROM tbl_dummy)
	</select>
	
	<select id="selectInList" parameterType="WorkDTO" resultType="WorkDTO">
		/* 현장 리스트 in 절로 조회 work.xml selectInList */
		SELECT
			work_seq,
			work_name
		FROM
			work
		WHERE
			work_seq IN
			<foreach collection="sel_work_seq" item="work_seq" open="(" close=")" separator=", ">
				#{work_seq }
			</foreach>
	</select>
	
	<insert id="insertLaborContractLog" parameterType="LaborContractDTO">
		INSERT INTO tbl_labor_contract_log (
			labor_contract_use_yn
			<if test="labor_contract_manager_type neq null">
				, labor_contract_manager_type
			</if>
			<if test="labor_contract_manager_seq neq null">
				, labor_contract_manager_seq
			</if>
			, use_yn
			, del_yn
			, reg_admin
			, reg_date
			, mod_admin
			, mod_date
		) VALUES (
			#{labor_contract_use_yn }
			<if test="labor_contract_manager_type neq null">
				, #{labor_contract_manager_type }
			</if>
			<if test="labor_contract_manager_seq neq null">
				, #{labor_contract_manager_seq }
			</if>
			, "1"
			, "0"
			, #{reg_admin }
			, NOW()
			, #{reg_admin }
			, NOW()
		)
	</insert>
</mapper>
