<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.nemo.kr.mapper.ilgaja.read.ReplicationManagerMapper">
	<resultMap id="ManagerTreeDTO" type="EmDTO">
		<id property="em_seq" column="em_seq" />
		<result property="id" column="em_seq" />
		<result property="text" column="employer_name" />
		<result property="manager_seq" column="manager_seq" />
		<result property="manager_name" column="manager_name" />
		<result property="manager_type" column="manager_type" />
		<result property="employer_seq" column="employer_seq" />
		<result property="employer_name" column="employer_name" />
		<result property="employer_num" column="employer_num" />
		
		<collection property="children" column ="wm_seq" ofType="WmDTO" javaType="java.util.ArrayList" resultMap="children"/>
	</resultMap>

 	<resultMap id="children" type="WmDTO">
 		<id property="wm_seq" column="wm_seq" />
 		
 		<result property="id" column="wm_seq" />
		<result property="text" column="work_name" />              
    	<result property="work_seq"     column="work_seq" />
    	<result property="work_name"    column="work_name" />
	</resultMap>

	<select id="getManagerTotalCnt" parameterType="ManagerDTO" resultType="int">
    	/* 매니저 정보 조회 manager.getManagerTotalCnt */
    	SELECT 
	    	COUNT(1)
	    FROM 
	    	(SELECT 
	    		c.company_name
	    		, e.employer_name
	    		, e.employer_num
	    		, e.employer_pass
	    		, m.manager_seq
				, (m.manager_phone) as manager_phone
				, m.manager_pass
				, (m.manager_name) as manager_name
				, m.manager_type
				, m.manager_memo
				, m.manager_etc
				, m.parent_company_seq
				, m.company_seq
				, m.employer_seq
				, m.manager_push_yn
				, m.push_token
				, m.app_version
				, m.manager_use_status
				, m.os_type
				, m.auth_num
				, m.use_yn
				, m.owner_id
				, m.reg_date
				, m.reg_admin
				, m.mod_date
				, m.mod_admin
				, m.visit_date
				, m.visit_count
				, m.visit_type
				,(SELECT COUNT(em_seq) FROM tbl_relation_em WHERE manager_seq = m.manager_seq) AS e_count
				,(SELECT COUNT(wm_seq) FROM tbl_relation_wm WHERE manager_seq = m.manager_seq) AS w_count 
				, m.ilbo_last_date
				, m.join_route
	    	FROM 
	    		manager m 
	    		LEFT OUTER JOIN company c 
	    			ON m.company_seq = c.company_seq 
	    		LEFT OUTER JOIN employer e 
	    			ON m.employer_seq = e.employer_seq
	    	) AS t
	    	WHERE 
	    		1 = 1
		    	${where}
		    	<if test="company_seq neq '' and company_seq neq null"> AND company_seq = #{company_seq} </if>
		    	<if test="start_reg_date neq '' and start_reg_date neq null"> AND DATE_FORMAT(reg_date, '%Y-%m-%d') <![CDATA[ >= ]]> #{start_reg_date} </if>
		    	<if test="end_reg_date   neq '' and end_reg_date   neq null"> AND DATE_FORMAT(reg_date, '%Y-%m-%d') <![CDATA[ <= ]]> #{end_reg_date} </if>
		    	<if test="srh_use_yn     neq '' and srh_use_yn     neq null"> AND use_yn = #{srh_use_yn} </if>
				<if test="owner_id           neq '' and owner_id           neq null"> AND owner_id			= #{owner_id} </if>
				<if test="manager_type           neq '' and manager_type           neq null"> AND manager_type			= #{manager_type} </if>
				<if test="sel_manager_use_status neq null">
					<foreach collection="sel_manager_use_status" item="manager_use_status" open="AND manager_use_status IN (" close=")" separator=", ">
						#{manager_use_status}
					</foreach>
				</if>
				<if test="w_count neq '' and w_count neq null">
					<choose>
						<when test="w_count eq '1'.toString()"> AND w_count = 1 </when>
						<when test="w_count eq '5'.toString()"> AND w_count <![CDATA[ >= ]]> 2 AND w_count <![CDATA[ <= ]]> 5</when>
						<when test="w_count eq '6'.toString()"> AND w_count <![CDATA[ >= ]]> 6</when>
					</choose>
				</if>
				<if test="e_count neq '' and e_count neq null">
					<choose>
						<when test="e_count eq '1'.toString()"> AND e_count = 1 </when>
						<when test="e_count eq '5'.toString()"> AND e_count <![CDATA[ >= ]]> 2 AND e_count <![CDATA[ <= ]]> 5</when>
						<when test="e_count eq '6'.toString()"> AND e_count <![CDATA[ >= ]]> 6</when>
					</choose>
				</if>
				<if test="interval neq '' and interval neq null">
					AND ilbo_last_date >= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL ${interval}), '%y-%m-%d')
				</if>
  	</select>

  	<select id="getManagerList" parameterType="ManagerDTO" resultType="ManagerDTO">
    	/* 매니저 조회 company_admin.getManagerList */
    	SELECT
    		company_name
	    	, employer_name
	    	, employer_num
	    	, employer_pass
	    	, manager_seq
			, FN_DECRYPT(manager_phone) as manager_phone
			, manager_pass
			, FN_DECRYPT(manager_name) as manager_name
			, manager_type
			, manager_memo
			, manager_etc
			, parent_company_seq
			, company_seq
			, employer_seq
			, manager_push_yn
			, push_token
			, app_version
			, manager_use_status
			, os_type
			, auth_num
			, use_yn
			, owner_id
			, reg_date
			, reg_admin
			, mod_date
			, mod_admin
			, visit_date
			, visit_count
			, visit_type
			, e_count
			, w_count
			, join_route
    	FROM
	    	(SELECT 
	    		c.company_name
	    		, e.employer_name
	    		, e.employer_num
	    		, e.employer_pass
	    		, m.manager_seq
				, (m.manager_phone) as manager_phone
				, m.manager_pass
				, (m.manager_name) as manager_name
				, m.manager_type
				, m.manager_memo
				, m.manager_etc
				, m.parent_company_seq
				, m.company_seq
				, m.employer_seq
				, m.manager_push_yn
				, m.push_token
				, m.app_version
				, m.manager_use_status
				, m.os_type
				, m.auth_num
				, m.use_yn
				, m.owner_id
				, m.reg_date
				, m.reg_admin
				, m.mod_date
				, m.mod_admin
				, m.visit_date
				, m.visit_count
				, m.visit_type
				,(SELECT COUNT(em_seq) FROM tbl_relation_em WHERE manager_seq = m.manager_seq) AS e_count
				,(SELECT COUNT(wm_seq) FROM tbl_relation_wm WHERE manager_seq = m.manager_seq) AS w_count 
				, m.ilbo_last_date
				, m.join_route
	    	FROM 
	    		manager m 
	    		LEFT OUTER JOIN company c 
	    			ON m.company_seq = c.company_seq 
	    		LEFT OUTER JOIN employer e 
	    			ON m.employer_seq = e.employer_seq
	    	) AS t
	    	WHERE 
	    		1 = 1
		    	${where}
		    	<if test="company_seq neq '' and company_seq neq null"> AND company_seq = #{company_seq} </if>
		    	<if test="start_reg_date neq '' and start_reg_date neq null"> AND DATE_FORMAT(reg_date, '%Y-%m-%d') <![CDATA[ >= ]]> #{start_reg_date} </if>
		    	<if test="end_reg_date   neq '' and end_reg_date   neq null"> AND DATE_FORMAT(reg_date, '%Y-%m-%d') <![CDATA[ <= ]]> #{end_reg_date} </if>
		    	<if test="srh_use_yn     neq '' and srh_use_yn     neq null"> AND use_yn = #{srh_use_yn} </if>
				<if test="owner_id           neq '' and owner_id           neq null"> AND owner_id			= #{owner_id} </if>
				<if test="manager_type           neq '' and manager_type           neq null"> AND manager_type			= #{manager_type} </if>
				<if test="sel_manager_use_status neq null">
					<foreach collection="sel_manager_use_status" item="manager_use_status" open="AND manager_use_status IN (" close=")" separator=", ">
						#{manager_use_status}
					</foreach>
				</if>
				<if test="w_count neq '' and w_count neq null">
					<choose>
						<when test="w_count eq '1'.toString()"> AND w_count = 1 </when>
						<when test="w_count eq '5'.toString()"> AND w_count <![CDATA[ >= ]]> 2 AND w_count <![CDATA[ <= ]]> 5</when>
						<when test="w_count eq '6'.toString()"> AND w_count <![CDATA[ >= ]]> 6</when>
					</choose>
				</if>
				<if test="e_count neq '' and e_count neq null">
					<choose>
						<when test="e_count eq '1'.toString()"> AND e_count = 1 </when>
						<when test="e_count eq '5'.toString()"> AND e_count <![CDATA[ >= ]]> 2 AND e_count <![CDATA[ <= ]]> 5</when>
						<when test="e_count eq '6'.toString()"> AND e_count <![CDATA[ >= ]]> 6</when>
					</choose>
				</if>
				<if test="interval neq '' and interval neq null">
					AND ilbo_last_date >= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL ${interval}), '%y-%m-%d')
				</if>
	    	ORDER BY ${sidx} ${sord}
	    	<if test="paging != null">
	      		<choose>
	        		<when test="paging.pageNo gt 0">
						LIMIT ${paging.startPage}, ${paging.endPage}
	        		</when>
	        		<otherwise>
						LIMIT 0, ${paging.endPage}
	        		</otherwise>
	      		</choose>
	    	</if>
	</select>

  	<select id="selectManagerCount" parameterType="ManagerDTO" resultType="int">
  		/* 메니져 카운터 조회 selectManagerCount manager.xml */
  		<if test="manager_phone  		neq '' and manager_phone			neq null">
  			WITH tbl_dummy AS (SELECT FN_ENCRYPT(#{manager_phone }) AS phoneNo)
  		</if>
  		
  		SELECT 
  			COUNT(*) 
  		FROM 
  			manager 
  		WHERE 
  			1 = 1
  			<if test="manager_phone  		neq '' and manager_phone			neq null"> AND manager_phone  	= (SELECT phoneNo FROM tbl_dummy) </if>
  			<if test="use_yn  					neq '' and use_yn  			neq null"> AND use_yn  	= #{use_yn} </if>
  			<if test="company_seq           	neq '' and company_seq       			neq null"> AND company_seq			= #{company_seq} </if>
  	</select>
  	
  	<select id="selectManagerInfo" parameterType="ManagerDTO" resultType="ManagerDTO">
    	/* 구인처 메니져 정보 조회 selectManagerInfo manager.xml */
    	<if test="manager_phone  		neq '' and manager_phone			neq null">
	    	WITH tbl_dummy AS (SELECT FN_ENCRYPT(#{manager_phone }) AS phoneNo)
	    </if>
	    
	    SELECT 
			m.manager_seq,
		  	FN_DECRYPT(m.manager_phone) AS manager_phone,
		  	m.manager_pass,
		  	FN_DECRYPT(m.manager_name) AS manager_name,
		  	m.manager_type,
		  	m.manager_memo,
		  	m.manager_etc,
		  	m.parent_company_seq,
		  	m.company_seq,
		  	m.employer_seq,
		  	m.manager_push_yn,
		  	m.push_token,
		  	m.app_version,
		  	m.os_type,
		  	m.auth_num,
		  	m.use_yn,
		  	m.owner_id,
		  	m.reg_date,
		  	m.reg_admin,
		  	m.mod_date,
		  	m.mod_admin,
		  	m.visit_date,
		  	m.visit_count,
		  	m.visit_type,
		  	m.manager_use_status
    		, (SELECT company_name FROM company WHERE company_seq = m.company_seq ) AS company_name
    		, (SELECT employer_name FROM employer WHERE employer_seq = m.employer_seq ) AS employer_name
    		, (SELECT FN_DECRYPT(company_tel) AS company_tel FROM company WHERE company_seq = m.company_seq ) as company_tel
    		, (SELECT FN_DECRYPT(admin_phone) AS admin_phone FROM admin WHERE admin_id = m.owner_id ) AS partner_tel
    		, IFNULL((SELECT counselor_rate FROM admin WHERE admin_id = m.owner_id ), 0) AS counselor_rate  
    		, IFNULL((SELECT auth_level FROM admin WHERE admin_id = m.owner_id ), 0) AS auth_level
    	FROM 
    		manager m
    	WHERE 
    		1 = 1
     		<if test="use_yn  					neq '' and use_yn  			neq null"> AND use_yn  	= #{use_yn} </if>
	     	<if test="manager_seq  			neq '' and manager_seq  			neq null"> AND manager_seq  	= #{manager_seq} </if>
     		<if test="manager_phone  		neq '' and manager_phone			neq null"> AND manager_phone  	= (SELECT phoneNo FROM tbl_dummy) </if>
     		<if test="manager_pass  			neq '' and manager_pass  			neq null"> AND manager_pass  	= PASSWORD(#{manager_pass}) </if>
     		<if test="parent_company_seq  neq '' and parent_company_seq neq null"> AND parent_company_seq  	= #{parent_company_seq} </if>
     		<if test="owner_id           		neq '' and owner_id       			neq null"> AND owner_id			= #{owner_id} </if>
     		<if test="company_seq           	neq '' and company_seq       			neq null"> AND company_seq			= #{company_seq} </if>
     		<if test="employer_seq           	neq '' and employer_seq       			neq null"> AND employer_seq			= #{employer_seq} </if>
	</select>
		  
  	<select id="selectManagerList" parameterType="ManagerDTO" resultType="ManagerDTO">
	    /* 구인처 메니져리스트  조회 selectManagerList manager.xml */
	    <if test="manager_phone  		neq '' and manager_phone			neq null">
    		WITH tbl_dummy AS (SELECT FN_ENCRYPT(#{manager_phone }) AS phoneNo)
    	</if>
    	
    	SELECT 
			m.manager_seq
			, FN_DECRYPT(m.manager_phone) as manager_phone
			, m.manager_pass
			, FN_DECRYPT(m.manager_name) as manager_name
			, m.manager_type
			, m.manager_memo
			, m.manager_etc
			, m.parent_company_seq
			, m.company_seq
			, m.employer_seq
			, m.manager_push_yn
			, m.push_token
			, m.app_version
			, m.os_type
			, m.auth_num
			, m.use_yn
			, m.owner_id
			, m.reg_date
			, m.reg_admin
			, m.mod_date
			, m.mod_admin
			, m.visit_date
			, m.visit_count
			, m.visit_type 
			, c.company_name
			, FN_DECRYPT(company_tel) AS company_tel
    		, FN_DECRYPT(admin_phone) AS partner_tel
    	FROM 
    		manager m
    	LEFT OUTER JOIN company c
    		ON m.company_seq = c.company_seq
    	LEFT OUTER JOIN admin a
    		ON m.owner_id = a.admin_id
    	WHERE 
    		1 = 1
     		<if test="use_yn  					neq '' and use_yn  			neq null"> AND m.use_yn  	= #{use_yn} </if>
     		<if test="manager_seq  			neq '' and manager_seq  			neq null"> AND manager_seq  	= #{manager_seq} </if>
     		<if test="manager_phone  		neq '' and manager_phone			neq null"> AND manager_phone  	= (SELECT phoneNo FROM tbl_dummy) </if>
     		<if test="manager_pass  			neq '' and manager_pass  			neq null"> AND manager_pass  	= PASSWORD(#{manager_pass}) </if>
     		<if test="parent_company_seq  neq '' and parent_company_seq neq null"> AND parent_company_seq  	= #{parent_company_seq} </if>
     		<if test="owner_id           		neq '' and owner_id       			neq null"> AND owner_id			= #{owner_id} </if>
     		<if test="company_seq           	neq '' and company_seq       			neq null"> AND m.company_seq			= #{company_seq} </if>
     		<if test="employer_seq           	neq '' and employer_seq       			neq null"> AND employer_seq			= #{employer_seq} </if>
     		<if test="manager_type				neq '' and manager_type					neq null"> AND manager_type			= #{manager_type} </if>
	 	ORDER BY manager_seq DESC
  	</select>
  
  	<select id="getCheckManagerEmployerNumList" parameterType="ManagerDTO" resultType="ManagerDTO">
	    /* 매니저 조회 company_admin.getManagerList */
   		SELECT 
			(SELECT company_name FROM company WHERE company_seq = m.company_seq) AS company_name
			, m.manager_seq
			, FN_DECRYPT(m.manager_phone) as manager_phone
			, m.manager_pass
			, FN_DECRYPT(m.manager_name) as manager_name
			, m.manager_type
			, m.manager_memo
			, m.manager_etc
			, m.parent_company_seq
			, m.company_seq
			, m.employer_seq
			, m.manager_push_yn
			, m.push_token
			, m.app_version
			, m.os_type
			, m.auth_num
			, m.use_yn
			, m.owner_id
			, m.reg_date
			, m.reg_admin
			, m.mod_date
			, m.mod_admin
			, m.visit_date
			, m.visit_count
			, m.visit_type 
		FROM 
			manager m 
			JOIN employer e 
				ON m.employer_seq = e.employer_seq 
		WHERE 
			e.employer_num = #{employer_num} 
			AND m.company_seq != #{company_seq}
  	</select>
  
  	<select id="getIlboTotalCnt" parameterType="IlboDTO" resultType="int">
   		/* 일보카운트 getIlboTotalCnt manager.xml */
   		<if test="login_type eq 'M'.toString()">
	 		WITH tbl_dummy AS (SELECT FN_ENCRYPT(#{manager_phone }) AS phoneNo)
	 	</if>
	 	
		SELECT 
			COUNT(*)
		FROM
			ilbo i 
			LEFT OUTER JOIN work w 
				ON i.work_seq = w.work_seq
			<if test="login_type eq 'M'.toString()">
				LEFT OUTER JOIN manager m  
					<if test="manager_type eq 'O'.toString()">   	ON m.manager_seq = w.manager_seq  </if>
	    			<if test="manager_type eq 'E'.toString()"> 		ON m.employer_seq = w.employer_seq </if>
			</if> 
		WHERE 
			i.use_yn = 1
			<if test="login_type eq 'M'.toString()">	
				AND m.manager_phone = (SELECT phoneNo FROM tbl_dummy)
				<if test="manager_type eq 'E'.toString()">	AND w.employer_seq= #{employer_seq}   </if>
			</if>
			<if test="login_type eq 'E'.toString()">
				AND w.employer_seq= #{employer_seq}
			</if>
			<if test="work_seq    neq '0'.toString() and work_seq    neq '' and work_seq    neq null"> AND w.work_seq= #{work_seq} </if>
			AND ilbo_status_code NOT IN ('STA007','STA008','STA009')   <!--현장상태확인 ilbo_status_code  STA007: 휴지 STA008: 취소  STA009 : 메모 -->
			AND output_status_code NOT IN ('100008', '100010')  			<!--대마  -->  <!--째앰  -->
			<if test="start_ilbo_date    neq '' and start_ilbo_date    neq null"> AND i.ilbo_date <![CDATA[ >= ]]> #{start_ilbo_date} </if>
			<if test="end_ilbo_date      neq '' and end_ilbo_date      neq null"> AND i.ilbo_date <![CDATA[ <= ]]> #{end_ilbo_date} </if>
  	</select>
  
  	<select id="getIlboList" parameterType="IlboDTO" resultType="IlboDTO">
  		/* 일보리스트API getIlboList manager.xml */
		<if test="login_type eq 'M'.toString()">
	 		WITH tbl_dummy AS (SELECT FN_ENCRYPT(#{manager_phone }) AS phoneNo)
	 	</if>
	 	
	 	SELECT
	 		ilbo_seq
			, FN_DECRYPT(ilbo_work_manager_name) AS ilbo_work_manager_name
			, FN_DECRYPT(ilbo_work_manager_phone) AS ilbo_work_manager_phone
			, FN_DECRYPT(ilbo_work_manager_email) AS ilbo_work_manager_email
			, FN_DECRYPT(ilbo_worker_name) AS ilbo_worker_name
			, FN_DECRYPT(ilbo_worker_phone) AS ilbo_worker_phone
			, FN_DECRYPT(ilbo_worker_jumin) AS ilbo_worker_jumin
			, FN_DECRYPT(ilbo_worker_bank_account) AS ilbo_worker_bank_account
			, FN_DECRYPT(ilbo_worker_bank_owner) AS ilbo_worker_bank_owner
			<if test="login_type eq 'M'.toString()">
			 	, FN_DECRYPT(manager_name) AS manager_name
			</if>
			, ilbo_date
			, ilbo_assign_type
			, company_seq
			, employer_seq
			, work_seq
			, worker_seq
		  	, order_work_seq
		  	, ilbo_work_name
		  	, ilbo_work_arrival
		  	, ilbo_work_finish
		  	, ilbo_work_addr
		  	, ilbo_work_latlng
		  	, ilbo_work_addr_comment
		  	, ilbo_work_breakfast_yn
		  	, ilbo_work_age_min
		  	, ilbo_work_age
		  	, ilbo_work_blood_pressure
		  	, ilbo_work_manager_fax
		  	, ilbo_order_code
		  	, ilbo_order_name
		  	, ilbo_work_order_code
		  	, ilbo_work_order_name
		  	, ilbo_status_code
		  	, ilbo_status_name
		  	, ilbo_use_code
		  	, ilbo_use_name
		  	, ilbo_kind_code
		  	, ilbo_kind_name
		  	, ilbo_job_comment
		  	, ilbo_chief_memo
		  	, ilbo_worker_addr
		  	, ilbo_worker_latlng
		  	, ilbo_worker_ilgaja_addr
		  	, ilbo_worker_ilgaja_latlng
		  	, ilbo_worker_status_code
		  	, ilbo_worker_status_name
		  	, ilbo_worker_job_code
		  	, ilbo_worker_job_name
		  	, ilbo_worker_barcode
		  	, ilbo_worker_memo
		  	, ilbo_worker_bank_code
		  	, ilbo_worker_bank_name
		  	, ilbo_worker_feature
		  	, ilbo_worker_blood_pressure
		  	, ilbo_worker_OSH_yn
		  	, ilbo_worker_jumin_scan_yn
		  	, ilbo_worker_bankbook_scan_yn
		  	, ilbo_worker_OSH_scan_yn
		  	, ilbo_worker_certificate_scan_yn
		  	, ilbo_worker_app_status
		  	, ilbo_worker_reserve_push_status
		  	, ilbo_worker_app_use_status
		  	, ilbo_unit_price
		  	, ilbo_gongsu
		  	, ilbo_fee
		  	, share_fee
		  	, ilbo_extra_pay
		  	, ilbo_deduction
		  	, counselor_fee
		  	, ilbo_pay
		  	, ilbo_pay_code
		  	, ilbo_pay_name
		  	, ilbo_pay_time
		  	, ilbo_pay_memo
		  	, ilbo_income_code
		  	, ilbo_income_name
		  	, ilbo_income_time
		  	, ilbo_income_memo
		  	, ilbo_confirm
		  	, ilbo_memo
		  	, ilbo_status
		  	, output_status_code
		  	, output_status_name
		  	, employer_rating
		  	, manager_rating
		  	, use_yn
		  	, reg_date
		  	, reg_admin
		  	, owner_id
		  	, mod_date
		  	, mod_admin
		  	, mod_output_date
		  	, worker_owner
		  	, work_owner
		  	, worker_company_seq
		  	, worker_company_name
	 	FROM 
		  	(SELECT 
				i.ilbo_seq
			  	, (i.ilbo_work_manager_name) AS ilbo_work_manager_name
			  	, (i.ilbo_work_manager_phone) AS ilbo_work_manager_phone
			  	, (i.ilbo_work_manager_email) AS ilbo_work_manager_email
			  	, (i.ilbo_worker_name) AS ilbo_worker_name
			  	, (i.ilbo_worker_phone) AS ilbo_worker_phone
			  	, (i.ilbo_worker_jumin) AS ilbo_worker_jumin
			  	, (i.ilbo_worker_bank_account) AS ilbo_worker_bank_account
			  	, (i.ilbo_worker_bank_owner) AS ilbo_worker_bank_owner
			  	<if test="login_type eq 'M'.toString()">
				  	, (m.manager_name) AS manager_name
			  	</if>
			  	, i.ilbo_date
			  	, i.ilbo_assign_type
			  	, i.company_seq
			  	, i.employer_seq
			  	, i.work_seq
			  	, i.worker_seq
			  	, i.order_work_seq
			  	, i.ilbo_work_name
			  	, i.ilbo_work_arrival
			  	, i.ilbo_work_finish
			  	, i.ilbo_work_addr
			  	, i.ilbo_work_latlng
			  	, i.ilbo_work_addr_comment
			  	, i.ilbo_work_breakfast_yn
			  	, i.ilbo_work_age_min
			  	, i.ilbo_work_age
			  	, i.ilbo_work_blood_pressure
			  	, i.ilbo_work_manager_fax
			  	, i.ilbo_order_code
			  	, i.ilbo_order_name
			  	, i.ilbo_work_order_code
			  	, i.ilbo_work_order_name
			  	, i.ilbo_status_code
			  	, i.ilbo_status_name
			  	, i.ilbo_use_code
			  	, i.ilbo_use_name
			  	, i.ilbo_kind_code
			  	, i.ilbo_kind_name
			  	, i.ilbo_job_comment
			  	, i.ilbo_chief_memo
			  	, i.ilbo_worker_addr
			  	, i.ilbo_worker_latlng
			  	, i.ilbo_worker_ilgaja_addr
			  	, i.ilbo_worker_ilgaja_latlng
			  	, i.ilbo_worker_status_code
			  	, i.ilbo_worker_status_name
			  	, i.ilbo_worker_job_code
			  	, i.ilbo_worker_job_name
			  	, i.ilbo_worker_barcode
			  	, i.ilbo_worker_memo
			  	, i.ilbo_worker_bank_code
			  	, i.ilbo_worker_bank_name
			  	, i.ilbo_worker_feature
			  	, i.ilbo_worker_blood_pressure
			  	, i.ilbo_worker_OSH_yn
			  	, i.ilbo_worker_jumin_scan_yn
			  	, i.ilbo_worker_bankbook_scan_yn
			  	, i.ilbo_worker_OSH_scan_yn
			  	, i.ilbo_worker_certificate_scan_yn
			  	, i.ilbo_worker_app_status
			  	, i.ilbo_worker_reserve_push_status
			  	, i.ilbo_worker_app_use_status
			  	, i.ilbo_unit_price
			  	, i.ilbo_gongsu
			  	, i.ilbo_fee
			  	, i.share_fee
			  	, i.ilbo_extra_pay
			  	, i.ilbo_deduction
			  	, i.counselor_fee
			  	, i.ilbo_pay
			  	, i.ilbo_pay_code
			  	, i.ilbo_pay_name
			  	, i.ilbo_pay_time
			  	, i.ilbo_pay_memo
			  	, i.ilbo_income_code
			  	, i.ilbo_income_name
			  	, i.ilbo_income_time
			  	, i.ilbo_income_memo
			  	, i.ilbo_confirm
			  	, i.ilbo_memo
			  	, i.ilbo_status
			  	, i.output_status_code
			  	, i.output_status_name
			  	, i.employer_rating
			  	, i.manager_rating
			  	, i.use_yn
			  	, i.reg_date
			  	, i.reg_admin
			  	, i.owner_id
			  	, i.mod_date
			  	, i.mod_admin
			  	, i.mod_output_date
			  	, i.worker_owner
			  	, i.work_owner
			  	, i.worker_company_seq
			  	, i.worker_company_name
			FROM
			  	ilbo i 
				LEFT OUTER JOIN WORK w    
					ON i.work_seq = w.work_seq 
			  	<if test="login_type eq 'M'.toString()">
					LEFT OUTER JOIN manager m  
						<if test="manager_type eq 'O'.toString()">   	ON m.manager_seq = w.manager_seq  </if>
		    			<if test="manager_type eq 'E'.toString()"> 		ON m.employer_seq = w.employer_seq </if>
	    	 	</if> 
			WHERE 
				1 = 1 
			  	AND i.use_yn = 1 
			  	AND i.ilbo_status_code NOT IN ('STA007', 'STA008', 'STA009') <!--현장상태확인 ilbo_status_code  STA007: 휴지 STA008: 취소  STA009 : 메모 -->
			  	AND i.output_status_code NOT IN ('100008', '100010') <!--대마  -->  <!--째앰  -->
			  	<if test="start_ilbo_date    neq '' and start_ilbo_date    neq null"> AND ilbo_date <![CDATA[ >= ]]> #{start_ilbo_date} </if>
				<if test="end_ilbo_date      neq '' and end_ilbo_date      neq null"> AND ilbo_date <![CDATA[ <= ]]> #{end_ilbo_date} </if> 
			  	<if test="login_type eq 'M'.toString()">	
					AND m.manager_phone = (SELECT phoneNo FROM tbl_dummy)
					<if test="manager_type eq 'E'.toString()">	AND w.employer_seq= #{employer_seq}   </if>
				</if>
				<if test="login_type eq 'E'.toString()">
					AND w.employer_seq= #{employer_seq}
				</if>
				<if test="work_seq    neq '0'.toString() and work_seq    neq '' and work_seq    neq null"> AND w.work_seq= #{work_seq} </if>
			ORDER BY ilbo_date DESC, ilbo_seq DESC
			<if test="paging.pageSize neq 0">
				LIMIT ${paging.startPage}, ${paging.endPage}
			</if>) AS t
	</select>
  
   	<select id="getIlboWorker" parameterType="IlboDTO" resultType="IlboDTO">
	    /* 근로자 조회 getIlboWorker manager.xml */
	    SELECT
	    	ilbo_seq
			, FN_DECRYPT(ilbo_work_manager_name) AS ilbo_work_manager_name
			, FN_DECRYPT(ilbo_work_manager_phone) AS ilbo_work_manager_phone
			, FN_DECRYPT(ilbo_work_manager_email) AS ilbo_work_manager_email
			, FN_DECRYPT(ilbo_worker_name) AS ilbo_worker_name
			, FN_DECRYPT(ilbo_worker_phone) AS ilbo_worker_phone
			, FN_DECRYPT(ilbo_worker_jumin) AS ilbo_worker_jumin
			, FN_DECRYPT(ilbo_worker_bank_account) AS ilbo_worker_bank_account
			, FN_DECRYPT(ilbo_worker_bank_owner) AS ilbo_worker_bank_owner
			, ilbo_date
			, ilbo_assign_type
			, company_seq
			, employer_seq
			, work_seq
			, worker_seq
			, order_work_seq
			, ilbo_work_name
			, ilbo_work_arrival
			, ilbo_work_finish
			, ilbo_work_addr
			, ilbo_work_latlng
			, ilbo_work_addr_comment
			, ilbo_work_breakfast_yn
			, ilbo_work_age_min
			, ilbo_work_age
			, ilbo_work_blood_pressure
			, ilbo_work_manager_fax
			, ilbo_order_code
			, ilbo_order_name
			, ilbo_work_order_code
			, ilbo_work_order_name
			, ilbo_status_code
			, ilbo_status_name
			, ilbo_use_code
			, ilbo_use_name
			, ilbo_kind_code
			, ilbo_kind_name
			, ilbo_job_comment
			, ilbo_chief_memo
			, ilbo_worker_sex
			, ilbo_worker_addr
			, ilbo_worker_latlng
			, ilbo_worker_ilgaja_addr
			, ilbo_worker_ilgaja_latlng
			, ilbo_worker_status_code
			, ilbo_worker_status_name
			, ilbo_worker_job_code
			, ilbo_worker_job_name
			, ilbo_worker_barcode
			, ilbo_worker_memo
			, ilbo_worker_bank_code
			, ilbo_worker_bank_name
			, ilbo_worker_feature
			, ilbo_worker_blood_pressure
			, ilbo_worker_OSH_yn
			, ilbo_worker_jumin_scan_yn
			, ilbo_worker_bankbook_scan_yn
			, ilbo_worker_OSH_scan_yn
			, ilbo_worker_certificate_scan_yn
			, ilbo_worker_app_status
			, ilbo_worker_reserve_push_status
			, ilbo_worker_app_use_status
			, ilbo_unit_price
			, ilbo_gongsu
			, ilbo_fee
			, share_fee
			, ilbo_extra_pay
			, ilbo_deduction
			, counselor_fee
			, ilbo_pay
			, ilbo_pay_code
			, ilbo_pay_name
			, ilbo_pay_time
			, ilbo_pay_memo
			, ilbo_income_code
			, ilbo_income_name
			, ilbo_income_time
			, ilbo_income_memo
			, ilbo_confirm
			, ilbo_memo
			, ilbo_status
			, output_status_code
			, output_status_name
			, employer_rating
			, manager_rating
			, use_yn
			, reg_date
			, reg_admin
			, owner_id
			, mod_date
			, mod_admin
			, mod_output_date
			, worker_owner
			, work_owner
			, worker_company_seq
			, worker_company_name 
    		, ilbo_worker_jumin_file_name
    		, ilbo_worker_OSH_file_name
    		, ilbo_worker_bankbook_file_name
    		, ilbo_worker_certificate_file_name
    		, ilbo_worker_photo_file_name
	    FROM
			(SELECT 
				i.ilbo_seq
				, (i.ilbo_work_manager_name) AS ilbo_work_manager_name
				, (i.ilbo_work_manager_phone) AS ilbo_work_manager_phone
				, (i.ilbo_work_manager_email) AS ilbo_work_manager_email
				, (i.ilbo_worker_name) AS ilbo_worker_name
				, (i.ilbo_worker_phone) AS ilbo_worker_phone
				, (i.ilbo_worker_jumin) AS ilbo_worker_jumin
				, (i.ilbo_worker_bank_account) AS ilbo_worker_bank_account
				, (i.ilbo_worker_bank_owner) AS ilbo_worker_bank_owner
				, i.ilbo_date
				, i.ilbo_assign_type
				, i.company_seq
				, i.employer_seq
				, i.work_seq
				, i.worker_seq
				, i.order_work_seq
				, i.ilbo_work_name
				, i.ilbo_work_arrival
				, i.ilbo_work_finish
				, i.ilbo_work_addr
				, i.ilbo_work_latlng
				, i.ilbo_work_addr_comment
				, i.ilbo_work_breakfast_yn
				, i.ilbo_work_age_min
				, i.ilbo_work_age
				, i.ilbo_work_blood_pressure
				, i.ilbo_work_manager_fax
				, i.ilbo_order_code
				, i.ilbo_order_name
				, i.ilbo_work_order_code
				, i.ilbo_work_order_name
				, i.ilbo_status_code
				, i.ilbo_status_name
				, i.ilbo_use_code
				, i.ilbo_use_name
				, i.ilbo_kind_code
				, i.ilbo_kind_name
				, i.ilbo_job_comment
				, i.ilbo_chief_memo
				, i.ilbo_worker_sex
				, i.ilbo_worker_addr
				, i.ilbo_worker_latlng
				, i.ilbo_worker_ilgaja_addr
				, i.ilbo_worker_ilgaja_latlng
				, i.ilbo_worker_status_code
				, i.ilbo_worker_status_name
				, i.ilbo_worker_job_code
				, i.ilbo_worker_job_name
				, i.ilbo_worker_barcode
				, i.ilbo_worker_memo
				, i.ilbo_worker_bank_code
				, i.ilbo_worker_bank_name
				, i.ilbo_worker_feature
				, i.ilbo_worker_blood_pressure
				, i.ilbo_worker_OSH_yn
				, i.ilbo_worker_jumin_scan_yn
				, i.ilbo_worker_bankbook_scan_yn
				, i.ilbo_worker_OSH_scan_yn
				, i.ilbo_worker_certificate_scan_yn
				, i.ilbo_worker_app_status
				, i.ilbo_worker_reserve_push_status
				, i.ilbo_worker_app_use_status
				, i.ilbo_unit_price
				, i.ilbo_gongsu
				, i.ilbo_fee
				, i.share_fee
				, i.ilbo_extra_pay
				, i.ilbo_deduction
				, i.counselor_fee
				, i.ilbo_pay
				, i.ilbo_pay_code
				, i.ilbo_pay_name
				, i.ilbo_pay_time
				, i.ilbo_pay_memo
				, i.ilbo_income_code
				, i.ilbo_income_name
				, i.ilbo_income_time
				, i.ilbo_income_memo
				, i.ilbo_confirm
				, i.ilbo_memo
				, i.ilbo_status
				, i.output_status_code
				, i.output_status_name
				, i.employer_rating
				, i.manager_rating
				, i.use_yn
				, i.reg_date
				, i.reg_admin
				, i.owner_id
				, i.mod_date
				, i.mod_admin
				, i.mod_output_date
				, i.worker_owner
				, i.work_owner
				, i.worker_company_seq
				, i.worker_company_name 
	    		, (SELECT file_name FROM file_info WHERE i.worker_seq = service_seq AND service_type = 'WORKER' AND service_code = 'JUMIN') AS ilbo_worker_jumin_file_name
	    		, (SELECT file_name FROM file_info WHERE i.worker_seq = service_seq AND service_type = 'WORKER' AND service_code = 'OSH') AS ilbo_worker_OSH_file_name
	    		, (SELECT file_name FROM file_info WHERE i.worker_seq = service_seq AND service_type = 'WORKER' AND service_code = 'BANK') AS ilbo_worker_bankbook_file_name
	    		, (SELECT file_name FROM file_info WHERE i.worker_seq = service_seq AND service_type = 'WORKER' AND service_code = 'CERT') AS ilbo_worker_certificate_file_name
	    		, (SELECT file_name FROM file_info WHERE i.worker_seq = service_seq AND service_type = 'WORKER' AND service_code = 'PHOTO') AS ilbo_worker_photo_file_name
	    	FROM 
	    		ilbo i 
	    	WHERE 
	    		use_yn = '1'
	     		<if test="ilbo_seq  	neq '' and ilbo_seq  	neq null"> AND ilbo_seq  = #{ilbo_seq} </if>) AS t
  	</select>
  
  	<select id="getWorkList" parameterType="WorkDTO" resultType="WorkDTO">
  		/* 현장리스트 getWorkList manager.xml */
  		<if test="manager_phone    neq '' and manager_phone    neq null">
  			WITH tbl_dummy AS (SELECT FN_ENCRYPT(#{manager_phone }) AS phoneNo)
  		</if>
  		
  		SELECT 
			w.work_seq
		  	, FN_DECRYPT (w.work_manager_name) AS work_manager_name
		  	, FN_DECRYPT (w.work_manager_phone) AS work_manager_phone
		  	, FN_DECRYPT (w.work_manager_email) AS work_manager_email
		  	, FN_DECRYPT (w.manager_phone) AS manager_phone
		  	, FN_DECRYPT (w.manager_name) AS manager_name
		  	, w.work_name
		  	, w.company_seq
		  	, w.employer_seq
		  	, w.work_arrival
		  	, w.work_finish
		  	, w.work_addr
		  	, w.work_latlng
		  	, w.work_addr_comment
		  	, w.work_breakfast_yn
		  	, w.work_age_min
		  	, w.work_age
		  	, w.work_blood_pressure
		  	, w.work_manager_fax
		  	, w.work_memo
		  	, w.work_comment
		  	, w.manager_seq
		  	, w.is_worker_info
		  	, w.use_yn
		  	, w.owner_id
		  	, w.complete_count
		  	, w.ilbo_last_date
		  	, w.reg_date
		  	, w.reg_admin
		  	, w.mod_date
		  	, w.mod_admin
		  	, e.employer_name 
  		FROM 
  			work w 
  			LEFT OUTER JOIN employer e 
  				on e.employer_seq = w.employer_seq
  		WHERE 
	  		w.use_yn=1 
  			<if test="manager_phone    neq '' and manager_phone    neq null"> AND manager_phone= (SELECT phoneNo FROM tbl_dummy)</if>
  			<if test="employer_seq neq '0'.toString() and employer_seq    neq '' and employer_seq    neq null"> AND w.employer_seq= #{employer_seq} </if>
  		ORDER BY work_seq DESC
  	</select>
	  
	<select id="getEmployerList" parameterType="WorkDTO" resultType="WorkDTO">
  		/* 본사리스트 getWorkList manager.xml */
  		<if test="manager_phone    neq '' and manager_phone    neq null">
		  	WITH tbl_dummy AS (SELECT FN_ENCRYPT(#{manager_phone }) AS phoneNo)
		</if>
		
		SELECT
			employer_name
		  	, work_seq
		  	, company_seq
		  	, employer_seq
			, work_name
			, work_arrival
			, work_finish
			, work_addr
			, work_latlng
			, work_addr_comment
			, work_breakfast_yn
			, work_age_min
			, work_age
			, work_blood_pressure
			, FN_DECRYPT(work_manager_name) AS work_manager_name
			, work_manager_fax
			, FN_DECRYPT(work_manager_phone) AS work_manager_phone
			, FN_DECRYPT(work_manager_email) AS work_manager_email
			, work_memo
			, work_comment
			, manager_seq
			, FN_DECRYPT(manager_phone) AS manager_phone
			, FN_DECRYPT(manager_name) AS manager_name
			, is_worker_info
			, use_yn
			, owner_id
			, complete_count
			, ilbo_last_date
			, reg_date
			, reg_admin
			, mod_date
			, mod_admin  
		FROM 
		  	(SELECT 
		  		(SELECT employer_name FROM employer WHERE employer_seq = w.employer_seq ) AS employer_name
		  		, w.work_seq
		  		, w.company_seq
		  		, w.employer_seq
				, w.work_name
				, w.work_arrival
				, w.work_finish
				, w.work_addr
				, w.work_latlng
				, w.work_addr_comment
				, w.work_breakfast_yn
				, w.work_age_min
				, w.work_age
				, w.work_blood_pressure
				, (w.work_manager_name) AS work_manager_name
				, w.work_manager_fax
				, (w.work_manager_phone) AS work_manager_phone
				, (w.work_manager_email) AS work_manager_email
				, w.work_memo
				, w.work_comment
				, w.manager_seq
				, (w.manager_phone) AS manager_phone
				, (w.manager_name) AS manager_name
				, w.is_worker_info
				, w.use_yn
				, w.owner_id
				, w.complete_count
				, w.ilbo_last_date
				, w.reg_date
				, w.reg_admin
				, w.mod_date
				, w.mod_admin  
		  	FROM 
		  		work w 
		  	WHERE 
		  		use_yn = 1 
		  		<if test="manager_phone    neq '' and manager_phone    neq null"> AND manager_phone= (SELECT phoneNo FROM tbl_dummy)</if>
		  		<if test="employer_seq neq '0'.toString() and employer_seq    neq '' and employer_seq    neq null"> AND w.employer_seq= #{employer_seq} </if>
		  	ORDER BY work_seq DESC) AS t
  	</select>
  
  	<select id="selectParentCompanySeq" parameterType="ManagerDTO" resultType="String">
  		/* manager.xml selectParentCompanySeq */
  		<if test="manager_phone    neq '' and manager_phone    neq null">
		  	WITH tbl_dummy AS (SELECT FN_ENCRYPT(#{manager_phone }) AS phoneNo)
		</if>
		
  		SELECT
  			company_seq
  		FROM
  			manager
  		WHERE
  			manager_phone = (SELECT phoneNo FROM tbl_dummy)
  			AND parent_company_seq = '0'
  			AND use_yn = '1'
  	</select>
  	
  	<select id="getWorkManagerList" parameterType="ManagerDTO" resultType="ManagerDTO">
  		/*manager.xml getWorkManagerList 현장에 등록된  매니져를 모두 출력한다. 본사매니져도 구해온다.*/
		SELECT 
			m.manager_seq
			, FN_DECRYPT (manager_phone) AS manager_phone
		  	, FN_DECRYPT (manager_name) AS manager_name
		  	, m.company_seq
		  	, company_name
		  	, m.manager_type
		FROM
		  	tbl_relation_wm wm 
		  	LEFT OUTER JOIN manager m 
		    	ON wm.manager_seq = m.manager_seq 
		  	LEFT OUTER JOIN company c 
			    ON m.company_seq = c.company_seq 
		WHERE 
			wm.use_yn = '1' 
		  	AND wm.work_seq = #{work_seq}
		  	AND m.use_yn = '1'
		  	
		UNION  
		
		SELECT 
			IFNULL(m.manager_seq, 0) as manager_seq
		  	, FN_DECRYPT (m.manager_phone) AS manager_phone
		  	, FN_DECRYPT (m.manager_name) AS manager_name
		  	, m.company_seq
		  	, company_name
		  	, m.manager_type 
		FROM
		  	WORK w 
		  	LEFT OUTER JOIN manager m 
			    ON w.employer_seq = m.employer_seq 
		  	LEFT OUTER JOIN company c 
			    ON m.company_seq = c.company_seq 
			WHERE 
				w.work_seq = #{work_seq}  
				AND m.manager_type = 'E' 
				AND m.use_yn = '1'
  	</select>
  	
  	<select id="selectWmList" parameterType="ManagerDTO" resultType="ManagerDTO">
  		/*manager.xml selectWmList*/
  		SELECT 
  			* 
  		FROM 
  			tbl_relation_wm 
  		WHERE 1= 1
  			<if test="use_yn    			neq '' and use_yn    neq null"> AND use_yn= #{use_yn} </if>
  			<if test="employer_seq   neq '' and employer_seq    neq null"> AND employer_seq = #{employer_seq} </if>
  			<if test="work_seq    		neq '' and work_seq    neq null"> AND work_seq = #{work_seq} </if>
  			<if test="manager_seq    neq '' and manager_seq    neq null"> AND manager_seq = #{manager_seq} </if>
  	</select>
  	
  	<select id="selectWmInfo" parameterType="ManagerDTO" resultType="ManagerDTO">
  		/*manager.xml selectWmInfo */
  		SELECT 
  			* 
  		FROM 
  			tbl_relation_wm 
  		WHERE 1 = 1
  			<if test="wm_seq   neq '' and wm_seq    neq null"> AND wm_seq = #{wm_seq} </if>
  			<if test="use_yn    			neq '' and use_yn    neq null"> AND use_yn= #{use_yn} </if>
  			<if test="employer_seq   neq '' and employer_seq    neq null"> AND employer_seq = #{employer_seq} </if>
  			<if test="work_seq    		neq '' and work_seq    neq null"> AND work_seq = #{work_seq} </if>
  			<if test="manager_seq    neq '' and manager_seq    neq null"> AND manager_seq = #{manager_seq} </if>
  	</select>
  	
  	<select id="selectEmList" parameterType="ManagerDTO" resultType="ManagerDTO">
  		/*manager.xml selectEmList*/
  		SELECT 
 			* 
 		FROM 
 			tbl_relation_em 
 		WHERE 
 			1 = 1
  			<if test="use_yn    			neq '' and use_yn    neq null"> AND use_yn= #{use_yn} </if>
  			<if test="employer_seq   neq '' and employer_seq    neq null"> AND employer_seq = #{employer_seq} </if>
  			<if test="manager_seq    neq '' and manager_seq    neq null"> AND manager_seq = #{manager_seq} </if>
  	</select>
  	
  	<select id="selectEmInfo" parameterType="ManagerDTO" resultType="ManagerDTO">
  		/*manager.xml selectVmInfo */
  		SELECT 
  			* 
  		FROM 
  			tbl_relation_em 
  		WHERE 1= 1
  			<if test="use_yn    			neq '' and use_yn    neq null"> AND use_yn= #{use_yn} </if>
  			<if test="employer_seq   neq '' and employer_seq    neq null"> AND employer_seq = #{employer_seq} </if>
  			<if test="manager_seq    neq '' and manager_seq    neq null"> AND manager_seq = #{manager_seq} </if>
  	</select>
  	
  	<select id="selectWmCount" parameterType="ManagerDTO" resultType="int">
  		/*manager.xml selectWmCount */
  		SELECT 
  			COUNT(*) 
  		FROM 
  			tbl_relation_wm 
  		WHERE 
  			1 = 1
  			<if test="use_yn    			neq '' and use_yn    neq null"> AND use_yn= #{use_yn} </if>
  			<if test="employer_seq   neq '' and employer_seq    neq null"> AND employer_seq = #{employer_seq} </if>
  			<if test="manager_seq    neq '' and manager_seq    neq null"> AND manager_seq = #{manager_seq} </if>
  	</select>
  	
  	<select id="getSearchManagerList" parameterType="ManagerDTO" resultType="ManagerDTO">
    	/* 메니져 리스트 검색 getSearchManagerList manager.xml */
    	SELECT 
			m.manager_seq,
		  	FN_DECRYPT(m.manager_phone) AS manager_phone,
		  	m.manager_pass,
		  	FN_DECRYPT(m.manager_name) AS manager_name,
		  	m.manager_type,
		  	m.manager_memo,
		  	m.manager_etc,
		  	m.parent_company_seq,
		  	m.company_seq,
		  	m.employer_seq,
		  	m.manager_push_yn,
		  	m.push_token,
		  	m.app_version,
		  	m.os_type,
		  	m.auth_num,
		  	m.use_yn,
		  	m.owner_id,
		  	m.reg_date,
		  	m.reg_admin,
		  	m.mod_date,
		  	m.mod_admin,
		  	m.visit_date,
		  	m.visit_count,
		  	m.visit_type  
    		, (SELECT company_name FROM company WHERE company_seq = m.company_seq ) AS company_name
    		, (SELECT employer_name FROM employer WHERE employer_seq = m.employer_seq ) AS employer_name
    		, (SELECT FN_DECRYPT(company_tel) AS company_tel FROM company WHERE company_seq = m.company_seq ) as company_tel
    		, (SELECT FN_DECRYPT(admin_phone) AS admin_phone FROM admin WHERE admin_id = m.owner_id ) AS partner_tel  
    	FROM 
    		manager m
    	WHERE 
    		1 = 1
     		<if test="use_yn  					neq '' and use_yn  			neq null"> AND use_yn  	= #{use_yn} </if>
     		<if test="manager_phone  		neq '' and manager_phone			neq null"> AND FN_DECRYPT(manager_phone) like CONCAT('%', #{manager_phone}, '%') </if>
     		<if test="manager_name		neq '' and manager_name			neq null"> AND FN_DECRYPT(manager_name) like CONCAT('%', #{manager_name}, '%') </if>
     		AND manager_type = 'O'
  	</select>
	  
	<select id="getManagerEWTreeList" parameterType="EmDTO" resultMap="ManagerTreeDTO">
	  	/*manager.xml selectEmList*/
  		SELECT 
  			em.em_seq
  			, e.employer_name
  			, e.employer_seq
  			, wm.wm_seq
  			, w.work_seq
  			, w.work_name
  		FROM 
  		 	tbl_relation_em em 
  			LEFT OUTER JOIN (SELECT * FROM tbl_relation_wm WHERE manager_seq= #{manager_seq}) wm
    			ON em.employer_seq = wm.employer_seq 
  			LEFT OUTER JOIN employer e 
  				ON em.employer_seq = e.employer_seq
  			LEFT OUTER JOIN work w 
  				ON wm.work_seq = w.work_seq 
		WHERE 
			1 = 1
  			<if test="use_yn    			neq '' and use_yn    neq null"> AND em.use_yn= #{use_yn} </if>
  			<if test="employer_seq   neq '' and employer_seq    neq null"> AND employer_seq = #{employer_seq} </if>
  			<if test="manager_seq    neq '' and manager_seq    neq null"> AND em.manager_seq = #{manager_seq} </if>
  	</select>
</mapper>
