<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.nemo.kr.mapper.ilgaja.read.ReplicationEmployerMapper">
  	<select id="getEmployerTotalCnt" parameterType="EmployerDTO" resultType="int">
    	/* 구인처 정보 조회 employer.getEmployerTotalCnt */
    	SELECT 
    		COUNT(1)
    	FROM 
    		employer e 
    		LEFT OUTER JOIN company c 
    			ON e.company_seq = c.company_seq
    		LEFT OUTER JOIN manager m 
	    		ON e.manager_seq = m.manager_seq	
	    	LEFT OUTER JOIN tbl_contract co
	    		ON e.labor_contract_seq = co.contract_seq
	    	LEFT OUTER JOIN tbl_contract co2
	    		ON e.receive_contract_seq = co2.contract_seq
    	WHERE 
    		1 = 1
    		${where}
    		<if test="srh_company_seq neq '' and srh_company_seq neq null"> 
    			AND e.company_seq = #{srh_company_seq} 
    		</if>
    		<if test="start_reg_date neq '' and start_reg_date neq null"> 
    			AND DATE_FORMAT(e.reg_date, '%Y-%m-%d') <![CDATA[ >= ]]> #{start_reg_date} 
    		</if>
    		<if test="end_reg_date neq '' and end_reg_date neq null"> 
    			AND DATE_FORMAT(e.reg_date, '%Y-%m-%d') <![CDATA[ <= ]]> #{end_reg_date} 
    		</if>
    		<if test="srh_use_yn neq '' and srh_use_yn neq null"> 
    			AND e.use_yn = #{srh_use_yn} 
    		</if>
    		<if test="owner_id neq '' and owner_id neq null"> 
    			AND e.owner_id = #{owner_id} 
    		</if>
  	</select>

  	<select id="getEmployerList" parameterType="EmployerDTO" resultType="EmployerDTO">
	    /* 구인처 정보 조회 employer.getEmployerList */
	    SELECT
	    	company_name
	    	, IFNULL(FN_DECRYPT(manager_name), '?') AS manager_name
	    	, employer_seq
	    	, company_seq
	    	, employer_num
	    	, employer_pass
	    	, employer_name
	    	, FN_DECRYPT(employer_owner) AS employer_owner
	    	, employer_business
	    	, employer_sector
	    	, is_tax
	    	, FN_DECRYPT(tax_name) AS tax_name
	    	, FN_DECRYPT(tax_phone) AS tax_phone
	    	, FN_DECRYPT(employer_tel) AS employer_tel
	    	, employer_fax
	    	, FN_DECRYPT(employer_phone) AS employer_phone
	    	, FN_DECRYPT(employer_phone1) AS employer_phone1
	    	, FN_DECRYPT(employer_phone2) AS employer_phone2
	    	, FN_DECRYPT(employer_phone3) AS employer_phone3
	    	, FN_DECRYPT(employer_phone4) AS employer_phone4
	    	, FN_DECRYPT(employer_email) AS employer_email
	    	, employer_addr
	    	, employer_feature
	    	, employer_memo
	    	, use_yn
	    	, owner_id
	    	, reg_date
	    	, reg_admin
	    	, mod_date
	    	, mod_admin
	    	, employer_corp_scan_yn
	    	, employer_etc_scan_yn
	    	, visit_date
	    	, visit_count
	    	, visit_type
	    	, os_type
	    	, push_token
	    	, app_version
	    	, out_count
	    	, total_out_count
	    	, work_count
	    	, manager_seq
	    	, ilbo_last_date
	    	, limit_count
	    	, employer_insurance
	    	, accident_insurance
	    	, national_pension
	    	, health_insurance
	    	, payment
		 	, wage
		 	, labor_contract_seq
		 	, labor_contract_name
		 	, labor_contract_use_yn
		 	, receive_contract_seq
		 	, receive_contract_name
		 	, receive_contract_use_yn
		 	, sign_manager_type
		 	, sign_manager_seq
		 	, FN_DECRYPT(sign_manager_name) AS sign_manager_name 
		 	, employer_detail_memo
		 	, employer_income_code
		 	, employer_income_name
		 	, employer_pay_code
		 	, employer_pay_name
		FROM 
	   		(SELECT 
		        c.company_name
		        , m.manager_name
				, e.employer_seq
				, e.company_seq
				, e.employer_num
				, e.employer_pass
				, e.employer_name
				, (e.employer_owner) as employer_owner
				, e.employer_business
				, e.employer_sector
				, e.is_tax
				, (e.tax_name) as tax_name
				, (e.tax_phone) as tax_phone
				, (e.employer_tel) as employer_tel
				, e.employer_fax
				, (e.employer_phone) as employer_phone
				, (e.employer_phone1) as employer_phone1
				, (e.employer_phone2) as employer_phone2
				, (e.employer_phone3) as employer_phone3
				, (e.employer_phone4) as employer_phone4
				, (e.employer_email) as employer_email
				, e.employer_addr
				, e.employer_feature
				, e.employer_memo
				, e.use_yn
				, e.owner_id
				, e.reg_date
				, e.reg_admin
				, e.mod_date
				, e.mod_admin
				, e.employer_corp_scan_yn
				, e.employer_etc_scan_yn
				, e.visit_date
				, e.visit_count
				, e.visit_type
				, e.os_type
				, e.push_token
				, e.app_version 
			 	, e.out_count
			 	, e.total_out_count
			 	, IFNULL(w.work_count, 0) AS work_count
			 	, e.manager_seq
			 	, e.ilbo_last_date
			 	, e.limit_count
			 	, e.employer_insurance
			 	, e.accident_insurance
			 	, e.national_pension
			 	, e.health_insurance
			 	, e.payment
			 	, e.wage
			 	, e.labor_contract_seq
			 	, co.contract_name AS labor_contract_name
			 	, co.use_yn AS labor_contract_use_yn
			 	, e.receive_contract_seq
			 	, co2.contract_name AS receive_contract_name
			 	, co2.use_yn AS receive_contract_use_yn
			 	, e.sign_manager_type
			 	, e.sign_manager_seq
			 	, (m2.manager_name) AS sign_manager_name
			 	, e.employer_detail_memo
			 	, e.employer_income_code
			 	, e.employer_income_name
			 	, e.employer_pay_code
			 	, e.employer_pay_name
			FROM 
				employer e 
		    	LEFT OUTER JOIN company c 
		    		ON e.company_seq = c.company_seq
		    	LEFT OUTER JOIN manager m 
		    		ON e.manager_seq = m.manager_seq
		    	LEFT OUTER JOIN (SELECT employer_seq, COUNT(work_seq) AS work_count FROM WORK WHERE  use_yn=1 GROUP BY employer_seq) w 
		    		ON e.employer_seq = w.employer_seq
		    	LEFT OUTER JOIN tbl_contract co
		    		ON e.labor_contract_seq = co.contract_seq
		    	LEFT OUTER JOIN tbl_contract co2
		    		ON e.receive_contract_seq = co2.contract_seq
		    	LEFT OUTER JOIN manager m2
		    		ON e.sign_manager_seq = m2.manager_seq
		    WHERE 
		    	1 = 1
		     	${where}
		    	<if test="company_seq neq '' and company_seq neq null"> 
		    		AND e.company_seq = #{company_seq} 
		    	</if>
		    	<if test="start_reg_date neq '' and start_reg_date neq null"> 
		    		AND DATE_FORMAT(e.reg_date, '%Y-%m-%d') <![CDATA[ >= ]]> #{start_reg_date} 
		    	</if>
		    	<if test="end_reg_date neq '' and end_reg_date neq null"> 
		    		AND DATE_FORMAT(e.reg_date, '%Y-%m-%d') <![CDATA[ <= ]]> #{end_reg_date} 
		    	</if>
		    	<if test="srh_use_yn neq '' and srh_use_yn neq null"> 
		    		AND e.use_yn = #{srh_use_yn} 
		    	</if>
		    	<if test="owner_id neq '' and owner_id neq null"> 
		    		AND e.owner_id = #{owner_id} 
		    	</if>
			ORDER BY ${sidx} ${sord}
			<if test="paging neq null">
		 		<choose>
		    		<when test="paging.pageNo gt 0">
			  			LIMIT ${paging.startPage}, ${paging.endPage}
		      		</when>
		      		<otherwise>
			  			LIMIT 0, ${paging.endPage}
		      		</otherwise>
		  		</choose>
		 	</if>) AS t
  	</select>

  	<select id="getEmployerView" parameterType="EmployerDTO" resultType="EmployerDTO">
    	/* 구인처 정보 조회 employer.getEmployerInfo */
    	SELECT 
    		c.company_name
			, e.employer_seq
			, e.company_seq
			, e.employer_num
			, e.employer_pass
			, e.employer_name
			, fn_decrypt(e.employer_owner) as employer_owner
			, e.employer_business
			, e.employer_sector
			, e.is_tax
			, fn_decrypt(e.tax_name) as tax_name
			, fn_decrypt(e.tax_phone) as tax_phone
			, fn_decrypt(e.employer_tel) as employer_tel
			, e.employer_fax
			, fn_decrypt(e.employer_phone) as employer_phone
			, fn_decrypt(e.employer_phone1) as employer_phone1
			, fn_decrypt(e.employer_phone2) as employer_phone2
			, fn_decrypt(e.employer_phone3) as employer_phone3
			, fn_decrypt(e.employer_phone4) as employer_phone4
			, fn_decrypt(e.employer_email) as employer_email
			, e.employer_addr
			, e.employer_feature
			, e.employer_memo
			, e.use_yn
			, e.owner_id
			, e.manager_seq
			, e.reg_date
			, e.reg_admin
			, e.mod_date
			, e.mod_admin
			, e.employer_corp_scan_yn
			, e.employer_etc_scan_yn
			, e.visit_date
			, e.visit_count
			, e.visit_type
			, e.os_type
			, e.push_token
			, e.app_version  
			, e.limit_count   		
			, e.labor_contract_seq
			, co.contract_name AS labor_contract_name
			, e.receive_contract_seq
			, co2.contract_name AS receive_contract_name
			, e.sign_manager_type
			, e.sign_manager_seq
			, FN_DECRYPT(m.manager_name) AS sign_manager_name
			, e.employer_detail_memo
			, e.employer_income_code
			, e.employer_income_name
			, e.employer_pay_code
			, e.employer_pay_name
    	FROM 
    		employer e 
    		LEFT OUTER JOIN company c 
    			ON e.company_seq = c.company_seq
   			LEFT OUTER JOIN tbl_contract co
	    		ON e.labor_contract_seq = co.contract_seq
	    	LEFT OUTER JOIN tbl_contract co2
	    		ON e.receive_contract_seq = co2.contract_seq
	    	LEFT OUTER JOIN manager m
	    		ON e.sign_manager_seq = m.manager_seq
    	WHERE 
    		e.employer_seq = #{employer_seq}
    		${where}
    		<if test="srh_use_yn neq '' and srh_use_yn neq null"> 
    			AND e.use_yn = #{srh_use_yn} 
    		</if>
    		<if test="owner_id neq '' and owner_id neq null"> 
    			AND e.owner_id = #{owner_id} 
    		</if>
  	</select>
  	
  	<select id="chkEmployerNum" parameterType="EmployerDTO" resultType="EmployerDTO">
    	/* 구인처 정보 조회 employer.chkEmployerNum */
    	SELECT 
	    	c.company_name
			, e.company_seq
			, e.employer_num
			, e.employer_pass
			, e.employer_name
			, fn_decrypt(e.employer_owner) as employer_owner
			, e.employer_business
			, e.employer_sector
			, e.is_tax
			, fn_decrypt(e.tax_name) as tax_name
			, fn_decrypt(e.tax_phone) as tax_phone
			, fn_decrypt(e.employer_tel) as employer_tel
			, e.employer_fax
			, fn_decrypt(e.employer_phone) as employer_phone
			, fn_decrypt(e.employer_phone1) as employer_phone1
			, fn_decrypt(e.employer_phone2) as employer_phone2
			, fn_decrypt(e.employer_phone3) as employer_phone3
			, fn_decrypt(e.employer_phone4) as employer_phone4
			, fn_decrypt(e.employer_email) as employer_email
			, e.employer_addr
			, e.employer_feature
			, e.employer_memo
			, e.use_yn
			, e.owner_id
			, e.manager_seq
			, e.reg_date
			, e.reg_admin
			, e.mod_date
			, e.mod_admin
			, e.employer_corp_scan_yn
			, e.employer_etc_scan_yn
			, e.visit_date
			, e.visit_count
			, e.visit_type
			, e.os_type
			, e.push_token
			, e.app_version 
			, e.limit_count
			, e.employer_detail_memo
			, e.employer_income_code
			, e.employer_income_name
			, e.employer_pay_code
			, e.employer_pay_name
    	FROM 
    		employer e 
    		LEFT OUTER JOIN company c ON e.company_seq = c.company_seq 
    	WHERE 
	    	employer_num = #{employer_num}
	    <if test="company_seq       neq '' and company_seq   neq null"> AND e.company_seq    = #{company_seq}   </if>
  	</select>
	  
  	<select id="selectEmployerInfo" parameterType="EmployerDTO" resultType="EmployerDTO">
  		/*구인처 정보조회 v2 로그인에서 사용 employer.xml selectManagerInfo */
  		SELECT
  			*
  			, (SELECT company_tel FROM company WHERE company_seq = e.company_seq ) as company_tel
    		, (SELECT admin_phone FROM admin WHERE admin_id = e.owner_id ) AS partner_tel   
  		FROM 
  			employer e 
  		WHERE
  			employer_num = #{employer_num} 
  			AND employer_pass = PASSWORD(#{employer_pass})  
  	</select>

  	<select id="selectInList" parameterType="EmployerDTO" resultType="EmployerDTO">
    	/* 구인처 리스트 in 절로 조회 employer.selectInList*/
   		SELECT 
	        employer_seq
			,employer_name
		FROM 
			employer 
		WHERE
	   		employer_seq IN
			<foreach collection="sel_employer_seq" item="employer_seq" open="(" close=")" separator=", ">
				 #{employer_seq }
			</foreach>
  	</select>
  	
  	<select id="selectEmployerNameCount" parameterType="List" resultType="int">
  		/* 오더접수시 구인처명이 기존에 존재하는지 확인 read/employer.xml */
  		SELECT
  			IFNULL(COUNT(*), 0) AS cnt
  		FROM
  			employer
  		WHERE
  			use_yn = 1
  			<foreach collection="list" item="employerName" open="AND (" close=")" separator="OR">
  				 employer_name LIKE ( CONCAT("%", #{employerName}, "%") )
  			</foreach>		
  	</select>
</mapper>
